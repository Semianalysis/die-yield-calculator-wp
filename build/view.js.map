{"version":3,"file":"view.js","mappings":"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","sources":["webpack://die-yield-calculator-wp/./src/components/App.tsx","webpack://die-yield-calculator-wp/./src/components/Checkbox/Checkbox.tsx","webpack://die-yield-calculator-wp/./src/components/NumberInput/NumberInput.tsx","webpack://die-yield-calculator-wp/./src/components/WaferCanvas/WaferCanvas.tsx","webpack://die-yield-calculator-wp/./src/config/index.ts","webpack://die-yield-calculator-wp/./src/config/sizes.ts","webpack://die-yield-calculator-wp/./src/config/yieldModels.ts","webpack://die-yield-calculator-wp/./src/hooks/useInputs.ts","webpack://die-yield-calculator-wp/./src/utils/calculations.ts","webpack://die-yield-calculator-wp/external window \"React\"","webpack://die-yield-calculator-wp/external window \"ReactDOM\"","webpack://die-yield-calculator-wp/external window \"ReactJSXRuntime\"","webpack://die-yield-calculator-wp/webpack/bootstrap","webpack://die-yield-calculator-wp/webpack/runtime/compat get default export","webpack://die-yield-calculator-wp/webpack/runtime/define property getters","webpack://die-yield-calculator-wp/webpack/runtime/hasOwnProperty shorthand","webpack://die-yield-calculator-wp/webpack/runtime/make namespace object","webpack://die-yield-calculator-wp/./src/view.js"],"sourcesContent":["import React, { useState, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { Checkbox } from \"./Checkbox/Checkbox\";\nimport { NumberInput } from \"./NumberInput/NumberInput\";\nimport { useInputs } from \"../hooks/useInputs\";\nimport { panelSizes, discSizes, yieldModels } from \"../config\";\nimport { FabResults, WaferShape } from \"../types\";\nimport { DiscCanvas, PanelCanvas } from \"./WaferCanvas/WaferCanvas\";\n\nconst ShapeSelector = (props: { shape: WaferShape, setShape: (value: WaferShape) => void }) => {\n\tconst shapes: Array<WaferShape> = [\"Disc\", \"Panel\"];\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>Shape</legend>\n\t\t\t{\n\t\t\t\tshapes.map((shape) => (\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"shape\"\n\t\t\t\t\t\t\tchecked={props.shape === shape}\n\t\t\t\t\t\t\tonChange={(e) => props.setShape(shape)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>{shape}</span>\n\t\t\t\t\t</label>\n\t\t\t\t))\n\t\t\t}\n\t\t</fieldset>\n\t);\n};\n\nconst DiscSizeSelect = (props: {\n\tselectedSize: keyof typeof discSizes,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\tconst sizeInfo = discSizes[props.selectedSize];\n\n\treturn (\n\t\t<div>\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(discSizes).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<div>Width: {sizeInfo.waferWidth} mm\n\t\t\t</div>\n\t\t\t;\n\t\t</div>\n\t)\n\t\t;\n};\n\nconst PanelSizeSelect = (props: {\n\tselectedSize: keyof typeof panelSizes,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\tconst sizeInfo = panelSizes[props.selectedSize];\n\n\treturn (\n\t\t<div>\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(panelSizes).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<div>Width: {sizeInfo.waferWidth} mm, Height: {sizeInfo.waferHeight} mm\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst ModelSelector = (props: {\n\tselectedModel: keyof typeof yieldModels,\n\thandleModelChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => (\n\t<div>\n\t\t<select value={props.selectedModel} onChange={props.handleModelChange}>\n\t\t\t{Object.entries(yieldModels).map(([key, value]) => (\n\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t{value.name}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t\t{}\n\t\t<div>\n\t\t\tModel: {yieldModels[props.selectedModel].name}\n\t\t</div>\n\t</div>\n);\n\nconst ResultStats = (props: {\n\tresults: FabResults;\n}) => (\n\t<div className=\"calculations\">\n\t\ttotalDies: {props.results.totalDies}, Good Wafers: {props.results.goodDies}, Fab\n\t\tYield: {props.results.fabYield}\n\t</div>\n);\n\nfunction App() {\n\tconst [dieWidth, setDieWidth] = useState<string>(\"8\");\n\tconst [dieHeight, setDieHeight] = useState<string>(\"8\");\n\tconst [aspectRatio, setAspectRatio] = useState<number>(1);\n\tconst [maintainAspectRatio, setMaintainAspectRatio] = useState(true);\n\tconst [criticalArea, setCriticalArea] = useState<string>(\"64\");\n\tconst [defectRate, setDefectRate] = useState<string>(\"0.1\");\n\tconst [edgeLoss, setEdgeLoss] = useState<string>(\"0\");\n\tconst [allCritical, setAllCritical] = useState(true);\n\tconst [reticleLimit, setReticleLimit] = useState(true);\n\tconst [scribeHoriz, setScribeHoriz] = useState<string>(\"0.1\");\n\tconst [scribeVert, setScribeVert] = useState<string>(\"0.1\");\n\tconst [transHoriz, setTransHoriz] = useState<string>(\"0\");\n\tconst [transVert, setTransVert] = useState<string>(\"0.1\");\n\tconst [waferShape, setWaferShape] = useState<WaferShape>(\"Disc\");\n\tconst [panelSize, setPanelSize] = useState<keyof typeof panelSizes>(\"s300mm\");\n\tconst [discSize, setDiscSize] = useState<keyof typeof discSizes>(\"s300mm\");\n\tconst [selectedModel, setSelectedModel] = useState<keyof typeof yieldModels>(\"murphy\");\n\tconst results = useInputs({\n\t\tdieWidth: parseFloat(dieWidth),\n\t\tdieHeight: parseFloat(dieHeight),\n\t\tcriticalArea: parseFloat(criticalArea),\n\t\tdefectRate: parseFloat(defectRate),\n\t\tedgeLoss: parseFloat(edgeLoss),\n\t\tscribeHoriz: parseFloat(scribeHoriz),\n\t\tscribeVert: parseFloat(scribeVert)\n\t}, selectedModel, waferShape, panelSize, discSize);\n\n\tuseEffect(() => {\n\t\tconst dieWidthNum = parseFloat(dieWidth);\n\t\tconst dieHeightNum = parseFloat(dieHeight);\n\t\tif (maintainAspectRatio && !isNaN(dieWidthNum) && !isNaN(dieHeightNum)) {\n\t\t\tsetAspectRatio(dieWidthNum / dieHeightNum);\n\t\t}\n\t}, [dieWidth, dieHeight, maintainAspectRatio]);\n\n\tconst nullOrRound = (setter: (val: string) => void, value: string) => {\n\t\tconst valFloat = parseFloat(value);\n\n\t\tif (isNaN(valFloat)) {\n\t\t\tsetter(\"\");\n\t\t} else {\n\t\t\tconst roundedValue = Math.round(valFloat * 100) / 100;\n\t\t\tsetter(roundedValue.toString());\n\t\t}\n\t};\n\n\tconst handleDimensionChange = (dimension: \"dieWidth\" | \"dieHeight\") => (value: string) => {\n\t\tconst valNum = parseFloat(value);\n\n\t\tif (!reticleLimit || ((dimension === \"dieWidth\" && valNum <= 33) || (dimension === \"dieHeight\" && valNum <= 26))) {\n\t\t\tif (dimension === \"dieWidth\") {\n\t\t\t\tnullOrRound(setDieWidth, value);\n\n\t\t\t\tif (maintainAspectRatio && aspectRatio) {\n\t\t\t\t\tconst height = valNum / aspectRatio;\n\n\t\t\t\t\tif (!isNaN(height)) {\n\t\t\t\t\t\tnullOrRound(setDieHeight, height.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (dimension === \"dieHeight\") {\n\t\t\t\tnullOrRound(setDieHeight, value);\n\n\t\t\t\tif (maintainAspectRatio && aspectRatio) {\n\t\t\t\t\tnullOrRound(setDieWidth, `${valNum * aspectRatio}`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdimension === \"dieWidth\" ? setDieWidth(value) : setDieHeight(value);\n\t\t}\n\n\t};\n\n\tconst handleScribeSizeChange = (dimension: string) => (value: string) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setScribeHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setScribeVert, value);\n\t\t}\n\t};\n\n\tconst handleCriticalAreaChange = (value: string) => {\n\t\tnullOrRound(setCriticalArea, value);\n\t};\n\n\tconst handleDefectRateChange = (value: string) => {\n\t\tnullOrRound(setDefectRate, value);\n\t};\n\n\tconst handleEdgeLossChange = (value: string) => {\n\t\tnullOrRound(setEdgeLoss, value);\n\t};\n\n\tconst handleTransChange = (dimension: string) => (value: string) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setTransHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setTransVert, value);\n\t\t}\n\t};\n\n\tconst handleMaintainAspectRatio = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMaintainAspectRatio(event.target.checked);\n\t};\n\n\tconst handleAllCriticalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetCriticalArea(`${parseFloat(dieWidth) * parseFloat(dieHeight)}`);\n\t\tsetAllCritical(event.target.checked);\n\t};\n\n\tconst handleReticleLimitChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetReticleLimit(event.target.checked);\n\t};\n\n\tconst handleSizeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tif (waferShape === \"Panel\") {\n\t\t\tsetPanelSize(event.target.value as keyof typeof panelSizes);\n\t\t} else if (waferShape === \"Disc\") {\n\t\t\tsetDiscSize(event.target.value as keyof typeof discSizes);\n\t\t}\n\t};\n\n\tconst handleModelChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tsetSelectedModel(event.target.value as keyof typeof yieldModels);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<a href=\"https://semianalysis.com\" target=\"_blank\">\n\t\t\t\t<img\n\t\t\t\t\talt=\"SemiAnalysis logo\"\n\t\t\t\t\tclassName=\"logo\"\n\t\t\t\t\tsrc=\"https://semianalysis-production.mystagingwebsite.com/wp-content/uploads/2024/07/logo-300x124.png\"\n\t\t\t\t/>\n\t\t\t</a>\n\t\t\t<div className=\"columns\">\n\t\t\t\t<div className=\"input\">\n\t\t\t\t\t<h2>Die size</h2>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Die Width (mm)\"\n\t\t\t\t\t\tvalue={dieWidth}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleDimensionChange(\"dieWidth\")(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Die Height (mm)\"\n\t\t\t\t\t\tvalue={dieHeight}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleDimensionChange(\"dieHeight\")(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tisDisabled={maintainAspectRatio}\n\t\t\t\t\t/>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tlabel=\"Maintain Aspect Ratio\"\n\t\t\t\t\t\tonChange={handleMaintainAspectRatio}\n\t\t\t\t\t\tchecked={maintainAspectRatio}\n\t\t\t\t\t/>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tlabel=\"Reticle Limit (26mm x 33mm)\"\n\t\t\t\t\t\tonChange={handleReticleLimitChange}\n\t\t\t\t\t\tchecked={reticleLimit}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tlabel=\"All Critical\"\n\t\t\t\t\t\tonChange={handleAllCriticalChange}\n\t\t\t\t\t\tchecked={allCritical}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Critical Area (mm²)\"\n\t\t\t\t\t\tvalue={criticalArea}\n\t\t\t\t\t\tisDisabled={allCritical}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleCriticalAreaChange(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h2>Wafer</h2>\n\t\t\t\t\t<ShapeSelector\n\t\t\t\t\t\tshape={waferShape}\n\t\t\t\t\t\tsetShape={setWaferShape}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\twaferShape === \"Panel\" &&\n\t\t\t\t\t\t<PanelSizeSelect\n\t\t\t\t\t\t\tselectedSize={panelSize}\n\t\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\twaferShape === \"Disc\" &&\n\t\t\t\t\t\t<DiscSizeSelect\n\t\t\t\t\t\t\tselectedSize={discSize}\n\t\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Defect Rate (#/cm²)\"\n\t\t\t\t\t\tvalue={defectRate}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleDefectRateChange(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Edge Loss (mm)\"\n\t\t\t\t\t\tvalue={edgeLoss}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleEdgeLossChange(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Scribe Lines Horiz\"\n\t\t\t\t\t\tvalue={scribeHoriz}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleScribeSizeChange(\"horiz\")(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Scribe Lines Vert\"\n\t\t\t\t\t\tvalue={scribeVert}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleScribeSizeChange(\"vert\")(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Translation Horiz\"\n\t\t\t\t\t\tvalue={transHoriz}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleTransChange(\"horiz\")(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlabel=\"Translation Vert\"\n\t\t\t\t\t\tvalue={transVert}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\thandleTransChange(\"vert\")(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ModelSelector\n\t\t\t\t\t\tselectedModel={selectedModel}\n\t\t\t\t\t\thandleModelChange={handleModelChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"output\">\n\t\t\t\t\t{waferShape === \"Panel\" && (\n\t\t\t\t\t\t<PanelCanvas results={results} />\n\t\t\t\t\t)}\n\t\t\t\t\t{waferShape === \"Disc\" && (\n\t\t\t\t\t\t<DiscCanvas results={results} />\n\t\t\t\t\t)}\n\t\t\t\t\t<ResultStats results={results} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\n\nexport function Checkbox(props: {\n\tlabel: string,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tchecked: boolean\n}) {\n\treturn (\n\t\t<div className=\"checkbox\">\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" onChange={props.onChange} checked={props.checked} />\n\t\t\t\t{props.label}\n\t\t\t</label>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport function NumberInput(props: {\n\tlabel: string,\n\tvalue: string,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tisDisabled?: boolean\n\tonBlur?: () => void,\n}) {\n\treturn (\n\t\t<div className=\"input-group\">\n\t\t\t<label>\n\t\t\t\t{props.label}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tdisabled={props.isDisabled}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\tonBlur={props.onBlur}\n\t\t\t\t\tstep=\"0.01\" />\n\t\t\t</label>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { Die, FabResults } from \"../../types\";\n\nfunction DieItem(props: Die) {\n\tconst stateColors = {\n\t\tgood: \"green\",\n\t\tdefective: \"grey\",\n\t\tpartial: \"yellow\",\n\t\tlost: \"red\"\n\t};\n\n\treturn (\n\t\t<rect\n\t\t\tx={props.x}\n\t\t\ty={props.y}\n\t\t\twidth={props.width}\n\t\t\theight={props.height}\n\t\t\tfill={stateColors[props.dieState]}\n\t\t/>\n\t);\n}\n\nexport function DiscCanvas(props: { results: FabResults }) {\n\t// Bail out if there are too many dies to draw, otherwise the browser will hang\n\tif (props.results.totalDies > 9999) {\n\t\treturn \"Too many dies to visualize\";\n\t}\n\n\treturn (\n\t\t<svg viewBox={`0 0 ${props.results.waferWidth} ${props.results.waferWidth}`}>\n\t\t\t<circle\n\t\t\t\tcx={props.results.waferWidth / 2}\n\t\t\t\tcy={props.results.waferWidth / 2}\n\t\t\t\tr={Math.min(props.results.waferWidth, props.results.waferWidth) / 2}\n\t\t\t\tstroke=\"black\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\tfill=\"none\" />\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\tprops.results.dies.map((die) => (<DieItem {...die} />))\n\t\t\t\t}\n\t\t\t</>\n\t\t</svg>\n\t);\n}\n\nexport function PanelCanvas(props: { results: FabResults }) {\n\t// Bail out if there are too many dies to draw, otherwise the browser will hang\n\tif (props.results.totalDies > 9999) {\n\t\treturn \"Too many dies to visualize\";\n\t}\n\n\treturn (\n\t\t<svg viewBox={`0 0 ${props.results.waferWidth} ${props.results.waferWidth}`}>\n\t\t\t{\n\t\t\t\tprops.results.dies.map((die) => <DieItem {...die} />)\n\t\t\t}\n\t\t</svg>\n\t);\n}\n\n","export * from './sizes';\nexport * from './yieldModels';\n","/**\n * Available sizes for rectangular wafers\n */\nexport const panelSizes = {\n\ts300mm: { name: \"300 mm (12 in)\", waferHeight: 300, waferWidth: 300 },\n\ts305mm: { name: \"305 x 457 mm² (12 x 18 in²)\", waferHeight: 305, waferWidth: 457 },\n\ts457mmsq: { name: \"457 mm² (18 in)\", waferHeight: 457, waferWidth: 457 },\n\ts457x600mm: { name: \"457 x 600 mm² (18 x 24 in²)\", waferHeight: 457, waferWidth: 600 },\n\ts510mm: { name: \"510 x 515 mm² (21 in)\", waferHeight: 510, waferWidth: 515 },\n\ts600m: { name: \"600 mm (24 in)\", waferHeight: 600, waferWidth: 600 }\n};\n\n/**\n * Available sizes for round wafers\n */\nexport const discSizes = {\n\ts51mm: { name: \"51 mm (2 in)\", waferWidth: 51 },\n\ts76mm: { name: \"76 mm (3 in)\", waferWidth: 76 },\n\ts100mm: { name: \"100 mm (4 in)\", waferWidth: 100 },\n\ts125mm: { name: \"125 mm (5 in)\", waferWidth: 125 },\n\ts150mm: { name: \"150 mm (6 in)\", waferWidth: 150 },\n\ts200mm: { name: \"200 mm (8 in)\", waferWidth: 200 },\n\ts300mm: { name: \"300 mm (12 in)\", waferWidth: 300 },\n\ts450mm: { name: \"450 mm (18 in)\", waferWidth: 450 }\n};\n","/**\n * Available mathematical models for calculating yield\n */\nexport const yieldModels : {\n\t[model: string]: {\n\t\tname: string\n\t\tyield: (defects: number) => number\n\t},\n} = {\n\tpoisson: {\n\t\tname: \"Poisson Model\",\n\t\tyield: (defects) => Math.exp(-defects)\n\t},\n\tmurphy: {\n\t\tname: \"Murphy's Model\",\n\t\tyield: (defects) => Math.pow(((1 - Math.exp(-defects)) / defects), 2)\n\t},\n\trect: {\n\t\tname: \"Rectangular Model\",\n\t\tyield: (defects) => (1 - Math.exp(-2 * defects)) / (2 * defects)\n\t},\n\t//moore: {name: \"Moore's Model\"},\n\tseeds: {\n\t\tname: \"Seeds Model\",\n\t\tyield: (defects) => 1 / (1 + defects)\n\t}\n};\n","import { useEffect, useState } from \"react\";\nimport { FabResults, WaferShape } from \"../types\";\nimport { discSizes, panelSizes, yieldModels } from \"../config\";\nimport { evaluateDiscInputs, evaluatePanelInputs, InputValues } from \"../utils/calculations\";\n\n/**\n * Given the numeric inputs, selected wafer properties, and a yield model, calculate\n * the expected fabrication results.\n * @param values numeric values provided by the user via inputs\n * @param yieldModel mathematical model for calculating yield\n * @param shape wafer shape\n * @param panelSize chosen size of panel wafer\n * @param discSize chosen size of disc wafer\n */\nexport function useInputs(\n\tvalues: InputValues,\n\tyieldModel: keyof typeof yieldModels,\n\tshape: WaferShape,\n\tpanelSize: keyof typeof panelSizes,\n\tdiscSize: keyof typeof discSizes\n): FabResults {\n\tconst [results, setResults] = useState<FabResults>({\n\t\tdies: [],\n\t\ttotalDies: 0,\n\t\tgoodDies: 0,\n\t\tfabYield: 0,\n\t\twaferWidth: 0,\n\t\twaferHeight: 0\n\t});\n\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tedgeLoss,\n\t\tscribeHoriz,\n\t\tscribeVert,\n\t} = values;\n\n\tuseEffect(() => {\n\t\t// Bail out if we can't use any of the values\n\t\tconst invalidValues = Object.values(values).filter(isNaN);\n\n\t\tif (invalidValues.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (shape === \"Disc\") {\n\t\t\tsetResults(evaluateDiscInputs(values, discSize, yieldModel));\n\t\t} else if (shape === \"Panel\") {\n\t\t\tsetResults(evaluatePanelInputs(values, panelSize, yieldModel));\n\t\t}\n\t}, [dieWidth, dieHeight, criticalArea, defectRate, edgeLoss, scribeHoriz, scribeVert, shape, panelSize, discSize, yieldModel]);\n\n\n\treturn results;\n}\n","import { discSizes, panelSizes, yieldModels } from \"../config\";\nimport { FabResults } from \"../types\";\n\n/**\n * Determine whether a target position (x, y) is inside or outside a circle\n * drawn from a center point (centerX, centerY) and extends outward to a given\n * size (radius)\n * @param x horizontal position of the target\n * @param y vertical position of the target\n * @param centerX horizontal center of the circle\n * @param centerY vertical center of the circle\n * @param radius size of the circle\n */\nexport function isInsideCircle(x: number, y: number, centerX: number, centerY: number, radius: number) {\n\treturn Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2) <= radius;\n}\n\n/**\n * Given a circle with the provided diameter, determine the maximum number of\n * rectangles of a given width and height would fit fully inside it, without\n * overlapping the edges\n * @param diameter size of the circle\n * @param rectWidth width of each rectangle\n * @param rectHeight height of each rectangle\n */\nexport function rectanglesInCircle(diameter: number, rectWidth: number, rectHeight: number) {\n\tconst radius = diameter / 2;\n\tconst centerX = radius;\n\tconst centerY = radius;\n\tlet positions = [];\n\n\tfor (let x = 0; x <= diameter + rectWidth; x += rectWidth) {\n\t\tfor (let y = 0; y <= diameter + rectHeight; y += rectHeight) {\n\t\t\tconst corners = [\n\t\t\t\t{ x: x, y: y },\n\t\t\t\t{ x: x + rectWidth, y: y },\n\t\t\t\t{ x: x, y: y + rectHeight },\n\t\t\t\t{ x: x + rectWidth, y: y + rectHeight }\n\t\t\t];\n\n\t\t\tif (corners.every(corner => isInsideCircle(corner.x, corner.y, centerX, centerY, radius))) {\n\t\t\t\tpositions.push({ x: x, y: y });\n\t\t\t}\n\t\t}\n\t}\n\treturn positions;\n}\n\n\n/**\n * Determine the yield based on the provided model\n * @param defectRate decimal representing how many dies will be defective\n * @param criticalArea die area\n * @param model model to calculate the yield\n */\nexport function getFabYield(\n\tdefectRate: number,\n\tcriticalArea: number,\n\tmodel: keyof typeof yieldModels\n) {\n\tif (!defectRate) {\n\t\treturn 1;\n\t}\n\n\tconst defects = criticalArea * defectRate / 100;\n\treturn yieldModels[model].yield(defects);\n}\n\nexport type InputValues = {\n\tdieWidth: number;\n\tdieHeight: number;\n\tcriticalArea: number;\n\tdefectRate: number;\n\tedgeLoss: number;\n\tscribeHoriz: number;\n\tscribeVert: number;\n};\n\nexport function evaluatePanelInputs(\n\tinputVals: InputValues,\n\tselectedSize: keyof typeof panelSizes,\n\tselectedModel: keyof typeof yieldModels\n): FabResults {\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tscribeHoriz,\n\t\tscribeVert\n\t} = inputVals;\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth, waferHeight } = panelSizes[selectedSize];\n\tconst adjustedDieWidth = dieWidth + scribeHoriz * 2;\n\tconst adjustedDieHeight = dieHeight + scribeVert * 2;\n\n\tconst diesPerRow = Math.floor(waferWidth / adjustedDieWidth);\n\tconst diesPerColumn = Math.floor(waferHeight / adjustedDieHeight);\n\n\tconst centerHorz = (waferWidth - adjustedDieWidth * diesPerRow) / 2;\n\tconst centerVert = (waferHeight - adjustedDieHeight * diesPerColumn) / 2;\n\n\tconst countWidth = Math.floor(waferWidth / (dieWidth + scribeHoriz * 2));\n\tconst countHeight = Math.floor(waferHeight / (dieHeight + scribeVert * 2));\n\n\tconst totalDies = countWidth * countHeight;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst row = Math.floor(i / diesPerRow);\n\t\tconst col = i % diesPerRow;\n\n\t\tconst dieState = dieStates[i];\n\n\t\tconst x = col * adjustedDieWidth + centerHorz;\n\t\tconst y = row * adjustedDieHeight + centerVert;\n\n\t\tdies[i] = {\n\t\t\tkey: i,\n\t\t\tdieState,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth: dieWidth,\n\t\t\theight: dieHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth,\n\t\twaferHeight\n\t};\n}\n\nexport function evaluateDiscInputs(\n\tinputVals: InputValues,\n\tselectedSize: keyof typeof discSizes,\n\tselectedModel: keyof typeof yieldModels\n): FabResults {\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tedgeLoss,\n\t\tscribeHoriz,\n\t\tscribeVert\n\t} = inputVals;\n\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth } = discSizes[selectedSize];\n\n\tlet positions = rectanglesInCircle(waferWidth, dieWidth + scribeHoriz * 2, dieHeight + scribeVert * 2);\n\tlet totalDies = positions.length;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst x = positions[i].x;\n\t\tconst y = positions[i].y;\n\n\t\tconst dieState = dieStates[i];\n\n\t\tconst corners = [\n\t\t\t{ x: x, y: y },\n\t\t\t{ x: x + dieWidth, y: y },\n\t\t\t{ x: x, y: y + dieHeight },\n\t\t\t{ x: x + dieWidth, y: y + dieHeight }\n\t\t];\n\n\t\tlet lossCircleRadius = waferWidth - edgeLoss;\n\n\t\tif (!corners.every(corner => isInsideCircle(corner.x, corner.y, waferWidth / 2, waferWidth / 2, lossCircleRadius))) {\n\t\t\tdieStates[i] = \"partial\";\n\t\t}\n\n\t\tdies[i] = {\n\t\t\tkey: i,\n\t\t\tdieState,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth: dieWidth,\n\t\t\theight: dieHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth\n\t};\n}\n","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst domNode = document.getElementById('die-yield-calculator');\n\tReactDOM.render(<App />, domNode);\n});\n"],"names":["React","useState","useEffect","Checkbox","NumberInput","useInputs","panelSizes","discSizes","yieldModels","DiscCanvas","PanelCanvas","ShapeSelector","props","shapes","createElement","map","shape","type","name","checked","onChange","e","setShape","DiscSizeSelect","sizeInfo","selectedSize","value","handleSizeChange","Object","entries","key","waferWidth","PanelSizeSelect","waferHeight","ModelSelector","selectedModel","handleModelChange","ResultStats","className","results","totalDies","goodDies","fabYield","App","dieWidth","setDieWidth","dieHeight","setDieHeight","aspectRatio","setAspectRatio","maintainAspectRatio","setMaintainAspectRatio","criticalArea","setCriticalArea","defectRate","setDefectRate","edgeLoss","setEdgeLoss","allCritical","setAllCritical","reticleLimit","setReticleLimit","scribeHoriz","setScribeHoriz","scribeVert","setScribeVert","transHoriz","setTransHoriz","transVert","setTransVert","waferShape","setWaferShape","panelSize","setPanelSize","discSize","setDiscSize","setSelectedModel","parseFloat","dieWidthNum","dieHeightNum","isNaN","nullOrRound","setter","valFloat","roundedValue","Math","round","toString","handleDimensionChange","dimension","valNum","height","handleScribeSizeChange","handleCriticalAreaChange","handleDefectRateChange","handleEdgeLossChange","handleTransChange","handleMaintainAspectRatio","event","target","handleAllCriticalChange","handleReticleLimitChange","href","alt","src","label","isDisabled","disabled","onBlur","step","DieItem","stateColors","good","defective","partial","lost","x","y","width","fill","dieState","viewBox","cx","cy","r","min","stroke","strokeWidth","Fragment","dies","die","s300mm","s305mm","s457mmsq","s457x600mm","s510mm","s600m","s51mm","s76mm","s100mm","s125mm","s150mm","s200mm","s450mm","poisson","yield","defects","exp","murphy","pow","rect","seeds","evaluateDiscInputs","evaluatePanelInputs","values","yieldModel","setResults","invalidValues","filter","length","isInsideCircle","centerX","centerY","radius","sqrt","rectanglesInCircle","diameter","rectWidth","rectHeight","positions","corners","every","corner","push","getFabYield","model","inputVals","adjustedDieWidth","adjustedDieHeight","diesPerRow","floor","diesPerColumn","centerHorz","centerVert","countWidth","countHeight","dieStates","Array","i","j","random","row","col","lossCircleRadius","ReactDOM","jsx","_jsx","document","addEventListener","domNode","getElementById","render"],"sourceRoot":""}