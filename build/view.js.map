{"version":3,"file":"view.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAmD;AACJ;AACS;AACT;AACgB;AAEP;AAExD,MAAMU,aAAa,GAAIC,KAAmE,IAAI;EAC7F,MAAMC,MAAM,GAAsB,CAAC,MAAM,EAAE,OAAO,CAAC;EAEnD,OACCZ,0DAAA,mBACCA,0DAAA,yBAAsB,EACtBA,0DAAA;IAAKc,SAAS,EAAC;EAAa,GAE1BF,MAAM,CAACG,GAAG,CAAEC,KAAK,IAChBhB,0DAAA;IAAOc,SAAS,EAAC,YAAY;IAACG,GAAG,EAAED;EAAK,GACvChB,0DAAA;IACCkB,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,OAAO;IACZC,OAAO,EAAET,KAAK,CAACK,KAAK,KAAKA,KAAK;IAC9BK,QAAQ,EAAGC,CAAC,IAAKX,KAAK,CAACY,QAAQ,CAACP,KAAK;EAAC,EACrC,EACFhB,0DAAA,eAAOgB,KAAK,CAAQ,CAErB,CAAC,CAEE,CACI;AAEb,CAAC;AAED,MAAMQ,cAAc,GAAIb,KAGvB,IAAI;EACJ,OACCX,0DAAA;IAAOc,SAAS,EAAC;EAAQ,eAExBd,0DAAA;IAAQyB,KAAK,EAAEd,KAAK,CAACe,YAAY;IAAEL,QAAQ,EAAEV,KAAK,CAACgB;EAAgB,GACjEC,MAAM,CAACC,OAAO,CAACtB,8CAAS,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACE,GAAG,EAAEQ,KAAK,CAAC,KAC3CzB,0DAAA;IAAQiB,GAAG,EAAEA,GAAG;IAAEQ,KAAK,EAAER;EAAG,GAC1BQ,KAAK,CAACN,IAAI,CAEZ,CAAC,CACM,CACF;AAEV,CAAC;AAED,MAAMW,eAAe,GAAInB,KAGxB,IAAI;EACJ,OACCX,0DAAA;IAAOc,SAAS,EAAC;EAAQ,iBAExBd,0DAAA;IAAQyB,KAAK,EAAEd,KAAK,CAACe,YAAY;IAAEL,QAAQ,EAAEV,KAAK,CAACgB;EAAgB,GACjEC,MAAM,CAACC,OAAO,CAACvB,+CAAU,CAAC,CAACS,GAAG,CAAC,CAAC,CAACE,GAAG,EAAEQ,KAAK,CAAC,KAC5CzB,0DAAA;IAAQiB,GAAG,EAAEA,GAAG;IAAEQ,KAAK,EAAER;EAAG,GAC1BQ,KAAK,CAACN,IAAI,CAEZ,CAAC,CACM,CACF;AAEV,CAAC;AAED,MAAMY,aAAa,GAAIpB,KAGtB,IACAX,0DAAA;EAAOc,SAAS,EAAC;AAAQ,8BAExBd,0DAAA;EAAQyB,KAAK,EAAEd,KAAK,CAACqB,aAAa;EAAEX,QAAQ,EAAEV,KAAK,CAACsB;AAAiB,GACnEL,MAAM,CAACC,OAAO,CAACrB,gDAAW,CAAC,CAACO,GAAG,CAAC,CAAC,CAACE,GAAG,EAAEQ,KAAK,CAAC,KAC7CzB,0DAAA;EAAQiB,GAAG,EAAEA,GAAG;EAAEQ,KAAK,EAAER;AAAG,GAC1BQ,KAAK,CAACN,IAAI,CAEZ,CAAC,CACM,CAEV;AAED,MAAMe,WAAW,GAAIvB,KAEpB,IACAX,0DAAA;EAAIc,SAAS,EAAC;AAAc,GAE1BH,KAAK,CAACwB,OAAO,CAACC,WAAW,GACxBpC,0DAAA,CAAAA,uDAAA,QACCA,0DAAA,8BAAkBW,KAAK,CAACwB,OAAO,CAACG,UAAU,OAAQ,EAClDtC,0DAAA,+BAAmBW,KAAK,CAACwB,OAAO,CAACC,WAAW,OAAQ,CAClD,GAEHpC,0DAAA,iCAAqBW,KAAK,CAACwB,OAAO,CAACG,UAAU,OAC7C,EAEFtC,0DAAA,6BAAiBW,KAAK,CAACwB,OAAO,CAACI,SAAS,CAAM,EAC9CvC,0DAAA,4BAAgBW,KAAK,CAACwB,OAAO,CAACK,QAAQ,CAAM,EAC5CxC,0DAAA,4BAAgBW,KAAK,CAACwB,OAAO,CAACM,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAAM,CAExD;AAED,SAASC,GAAGA,CAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,+CAAQ,CAAS,GAAG,CAAC;EACrD,MAAM,CAAC6C,SAAS,EAAEC,YAAY,CAAC,GAAG9C,+CAAQ,CAAS,GAAG,CAAC;EACvD,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,+CAAQ,CAAS,CAAC,CAAC;EACzD,MAAM,CAACiD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlD,+CAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,+CAAQ,CAAS,IAAI,CAAC;EAC9D,MAAM,CAACqD,UAAU,EAAEC,aAAa,CAAC,GAAGtD,+CAAQ,CAAS,KAAK,CAAC;EAC3D,MAAM,CAACuD,QAAQ,EAAEC,WAAW,CAAC,GAAGxD,+CAAQ,CAAS,GAAG,CAAC;EACrD,MAAM,CAACyD,WAAW,EAAEC,cAAc,CAAC,GAAG1D,+CAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC2D,YAAY,EAAEC,eAAe,CAAC,GAAG5D,+CAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC6D,WAAW,EAAEC,cAAc,CAAC,GAAG9D,+CAAQ,CAAS,KAAK,CAAC;EAC7D,MAAM,CAAC+D,UAAU,EAAEC,aAAa,CAAC,GAAGhE,+CAAQ,CAAS,KAAK,CAAC;EAC3D,MAAM,CAACiE,UAAU,EAAEC,aAAa,CAAC,GAAGlE,+CAAQ,CAAS,GAAG,CAAC;EACzD,MAAM,CAACmE,SAAS,EAAEC,YAAY,CAAC,GAAGpE,+CAAQ,CAAS,KAAK,CAAC;EACzD,MAAM,CAACqE,UAAU,EAAEC,aAAa,CAAC,GAAGtE,+CAAQ,CAAa,MAAM,CAAC;EAChE,MAAM,CAACuE,SAAS,EAAEC,YAAY,CAAC,GAAGxE,+CAAQ,CAA0B,QAAQ,CAAC;EAC7E,MAAM,CAACyE,QAAQ,EAAEC,WAAW,CAAC,GAAG1E,+CAAQ,CAAyB,QAAQ,CAAC;EAC1E,MAAM,CAAC+B,aAAa,EAAE4C,gBAAgB,CAAC,GAAG3E,+CAAQ,CAA2B,QAAQ,CAAC;EACtF,MAAMkC,OAAO,GAAG9B,2DAAS,CAAC;IACzBuC,QAAQ,EAAEiC,UAAU,CAACjC,QAAQ,CAAC;IAC9BE,SAAS,EAAE+B,UAAU,CAAC/B,SAAS,CAAC;IAChCM,YAAY,EAAEyB,UAAU,CAACzB,YAAY,CAAC;IACtCE,UAAU,EAAEuB,UAAU,CAACvB,UAAU,CAAC;IAClCE,QAAQ,EAAEqB,UAAU,CAACrB,QAAQ,CAAC;IAC9BM,WAAW,EAAEe,UAAU,CAACf,WAAW,CAAC;IACpCE,UAAU,EAAEa,UAAU,CAACb,UAAU;GACjC,EAAEhC,aAAa,EAAEsC,UAAU,EAAEE,SAAS,EAAEE,QAAQ,CAAC;EAElDxE,gDAAS,CAAC,MAAK;IACd,MAAM4E,WAAW,GAAGD,UAAU,CAACjC,QAAQ,CAAC;IACxC,MAAMmC,YAAY,GAAGF,UAAU,CAAC/B,SAAS,CAAC;IAC1C,IAAII,mBAAmB,IAAI,CAAC8B,KAAK,CAACF,WAAW,CAAC,IAAI,CAACE,KAAK,CAACD,YAAY,CAAC,EAAE;MACvE9B,cAAc,CAAC6B,WAAW,GAAGC,YAAY,CAAC;IAC3C;EACD,CAAC,EAAE,CAACnC,QAAQ,EAAEE,SAAS,EAAEI,mBAAmB,CAAC,CAAC;EAE9C,MAAM+B,WAAW,GAAGA,CAACC,MAA6B,EAAEzD,KAAa,KAAI;IACpE,MAAM0D,QAAQ,GAAGN,UAAU,CAACpD,KAAK,CAAC;IAElC,IAAIuD,KAAK,CAACG,QAAQ,CAAC,EAAE;MACpBD,MAAM,CAAC,EAAE,CAAC;IACX,CAAC,MAAM;MACN,MAAME,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG;MACrDD,MAAM,CAACE,YAAY,CAACG,QAAQ,EAAE,CAAC;IAChC;EACD,CAAC;EAED,MAAMC,qBAAqB,GAAIC,SAAmC,IAAMhE,KAAa,IAAI;IACxF,MAAMiE,MAAM,GAAGb,UAAU,CAACpD,KAAK,CAAC;IAEhC,IAAI,CAACmC,YAAY,IAAM6B,SAAS,KAAK,UAAU,IAAIC,MAAM,IAAI,EAAE,IAAMD,SAAS,KAAK,WAAW,IAAIC,MAAM,IAAI,EAAI,EAAE;MACjH,IAAID,SAAS,KAAK,UAAU,EAAE;QAC7BR,WAAW,CAACpC,WAAW,EAAEpB,KAAK,CAAC;QAE/B,IAAIyB,mBAAmB,IAAIF,WAAW,EAAE;UACvC,MAAM2C,MAAM,GAAGD,MAAM,GAAG1C,WAAW;UAEnC,IAAI,CAACgC,KAAK,CAACW,MAAM,CAAC,EAAE;YACnBV,WAAW,CAAClC,YAAY,EAAE4C,MAAM,CAACJ,QAAQ,EAAE,CAAC;UAC7C;QACD;MACD,CAAC,MAAM,IAAIE,SAAS,KAAK,WAAW,EAAE;QACrCR,WAAW,CAAClC,YAAY,EAAEtB,KAAK,CAAC;QAEhC,IAAIyB,mBAAmB,IAAIF,WAAW,EAAE;UACvCiC,WAAW,CAACpC,WAAW,EAAE,GAAG6C,MAAM,GAAG1C,WAAW,EAAE,CAAC;QACpD;MACD;IACD,CAAC,MAAM;MACNyC,SAAS,KAAK,UAAU,GAAG5C,WAAW,CAACpB,KAAK,CAAC,GAAGsB,YAAY,CAACtB,KAAK,CAAC;IACpE;EAED,CAAC;EAED,MAAMmE,sBAAsB,GAAIH,SAAiB,IAAMhE,KAAa,IAAI;IACvE,IAAIgE,SAAS,KAAK,OAAO,EAAE;MAC1BR,WAAW,CAAClB,cAAc,EAAEtC,KAAK,CAAC;IACnC,CAAC,MAAM,IAAIgE,SAAS,KAAK,MAAM,EAAE;MAChCR,WAAW,CAAChB,aAAa,EAAExC,KAAK,CAAC;IAClC;EACD,CAAC;EAED,MAAMoE,wBAAwB,GAAIpE,KAAa,IAAI;IAClDwD,WAAW,CAAC5B,eAAe,EAAE5B,KAAK,CAAC;EACpC,CAAC;EAED,MAAMqE,sBAAsB,GAAIrE,KAAa,IAAI;IAChDwD,WAAW,CAAC1B,aAAa,EAAE9B,KAAK,CAAC;EAClC,CAAC;EAED,MAAMsE,oBAAoB,GAAItE,KAAa,IAAI;IAC9CwD,WAAW,CAACxB,WAAW,EAAEhC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMuE,iBAAiB,GAAIP,SAAiB,IAAMhE,KAAa,IAAI;IAClE,IAAIgE,SAAS,KAAK,OAAO,EAAE;MAC1BR,WAAW,CAACd,aAAa,EAAE1C,KAAK,CAAC;IAClC,CAAC,MAAM,IAAIgE,SAAS,KAAK,MAAM,EAAE;MAChCR,WAAW,CAACZ,YAAY,EAAE5C,KAAK,CAAC;IACjC;EACD,CAAC;EAED,MAAMwE,yBAAyB,GAAIC,KAA0C,IAAI;IAChF/C,sBAAsB,CAAC+C,KAAK,CAACC,MAAM,CAAC/E,OAAO,CAAC;EAC7C,CAAC;EAED,MAAMgF,uBAAuB,GAAIF,KAA0C,IAAI;IAC9E7C,eAAe,CAAC,GAAGwB,UAAU,CAACjC,QAAQ,CAAC,GAAGiC,UAAU,CAAC/B,SAAS,CAAC,EAAE,CAAC;IAClEa,cAAc,CAACuC,KAAK,CAACC,MAAM,CAAC/E,OAAO,CAAC;EACrC,CAAC;EAED,MAAMiF,wBAAwB,GAAIH,KAA0C,IAAI;IAC/ErC,eAAe,CAACqC,KAAK,CAACC,MAAM,CAAC/E,OAAO,CAAC;EACtC,CAAC;EAED,MAAMO,gBAAgB,GAAIuE,KAA2C,IAAI;IACxE,IAAI5B,UAAU,KAAK,OAAO,EAAE;MAC3BG,YAAY,CAACyB,KAAK,CAACC,MAAM,CAAC1E,KAAgC,CAAC;IAC5D,CAAC,MAAM,IAAI6C,UAAU,KAAK,MAAM,EAAE;MACjCK,WAAW,CAACuB,KAAK,CAACC,MAAM,CAAC1E,KAA+B,CAAC;IAC1D;EACD,CAAC;EAED,MAAMQ,iBAAiB,GAAIiE,KAA2C,IAAI;IACzEtB,gBAAgB,CAACsB,KAAK,CAACC,MAAM,CAAC1E,KAAiC,CAAC;EACjE,CAAC;EAED,OACCzB,0DAAA;IAAKc,SAAS,EAAC;EAAW,GACzBd,0DAAA;IAAKc,SAAS,EAAC;EAAS,GACvBd,0DAAA;IAAKc,SAAS,EAAC;EAAa,GAC3Bd,0DAAA,wBAAiB,EACjBA,0DAAA;IAAKc,SAAS,EAAC;EAAoB,GAClCd,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,YAAY;IAClB7E,KAAK,EAAEmB,QAAQ;IACfvB,QAAQ,EAAG6E,KAAK,IAAI;MACnBV,qBAAqB,CAAC,UAAU,CAAC,CAACU,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IACtD;EAAC,EACA,EACFzB,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,aAAa;IACnB7E,KAAK,EAAEqB,SAAS;IAChBzB,QAAQ,EAAG6E,KAAK,IAAI;MACnBV,qBAAqB,CAAC,WAAW,CAAC,CAACU,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IACvD,CAAC;IACD8E,UAAU,EAAErD;EAAmB,EAC9B,CACG,EACNlD,0DAAA;IAAKc,SAAS,EAAC;EAAW,GACzBd,0DAAA,CAACG,wDAAQ;IACRmG,KAAK,EAAC,uBAAuB;IAC7BjF,QAAQ,EAAE4E,yBAAyB;IACnC7E,OAAO,EAAE8B;EAAmB,EAC3B,EACFlD,0DAAA,CAACG,wDAAQ;IACRmG,KAAK,EAAC,6BAA6B;IACnCjF,QAAQ,EAAEgF,wBAAwB;IAClCjF,OAAO,EAAEwC;EAAY,EACpB,CACG,EACN5D,0DAAA;IAAKc,SAAS,EAAC;EAAW,GACzBd,0DAAA,CAACG,wDAAQ;IACRmG,KAAK,EAAC,cAAc;IACpBjF,QAAQ,EAAE+E,uBAAuB;IACjChF,OAAO,EAAEsC;EAAW,EACnB,CACG,EACN1D,0DAAA;IAAKc,SAAS,EAAC;EAAW,GACzBd,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,0BAAqB;IAC3B7E,KAAK,EAAE2B,YAAY;IACnBmD,UAAU,EAAE7C,WAAW;IACvBrC,QAAQ,EAAG6E,KAAK,IAAI;MACnBL,wBAAwB,CAACK,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IAC7C;EAAC,EACA,CACG,EACNzB,0DAAA,YAAM,EACNA,0DAAA,qBAAc,EACdA,0DAAA;IAAKc,SAAS,EAAC;EAAW,GACzBd,0DAAA,CAACU,aAAa;IACbM,KAAK,EAAEsD,UAAU;IACjB/C,QAAQ,EAAEgD;EAAa,EACtB,CACG,EACNvE,0DAAA;IAAKc,SAAS,EAAC;EAAW,GAExBwD,UAAU,KAAK,OAAO,IACtBtE,0DAAA,CAAC8B,eAAe;IACfJ,YAAY,EAAE8C,SAAS;IACvB7C,gBAAgB,EAAEA;EAAgB,EACjC,EAGF2C,UAAU,KAAK,MAAM,IACrBtE,0DAAA,CAACwB,cAAc;IACdE,YAAY,EAAEgD,QAAQ;IACtB/C,gBAAgB,EAAEA;EAAgB,EACjC,CAEE,EACN3B,0DAAA;IAAKc,SAAS,EAAC;EAAW,GACzBd,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,0BAAqB;IAC3B7E,KAAK,EAAE6B,UAAU;IACjBjC,QAAQ,EAAG6E,KAAK,IAAI;MACnBJ,sBAAsB,CAACI,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IAC3C;EAAC,EACA,CACG,EACNzB,0DAAA;IAAKc,SAAS,EAAC;EAAW,GACzBd,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,gBAAgB;IACtB7E,KAAK,EAAE+B,QAAQ;IACfnC,QAAQ,EAAG6E,KAAK,IAAI;MACnBH,oBAAoB,CAACG,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IACzC;EAAC,EACA,CACG,EACNzB,0DAAA;IAAKc,SAAS,EAAC;EAAoB,GAClCd,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,oBAAoB;IAC1B7E,KAAK,EAAEqC,WAAW;IAClBzC,QAAQ,EAAG6E,KAAK,IAAI;MACnBN,sBAAsB,CAAC,OAAO,CAAC,CAACM,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IACpD;EAAC,EACA,EACFzB,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,mBAAmB;IACzB7E,KAAK,EAAEuC,UAAU;IACjB3C,QAAQ,EAAG6E,KAAK,IAAI;MACnBN,sBAAsB,CAAC,MAAM,CAAC,CAACM,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IACnD;EAAC,EACA,CACG,EACNzB,0DAAA;IAAKc,SAAS,EAAC;EAAoB,GAClCd,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,mBAAmB;IACzB7E,KAAK,EAAEyC,UAAU;IACjB7C,QAAQ,EAAG6E,KAAK,IAAI;MACnBF,iBAAiB,CAAC,OAAO,CAAC,CAACE,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IAC/C;EAAC,EACA,EACFzB,0DAAA,CAACI,iEAAW;IACXkG,KAAK,EAAC,kBAAkB;IACxB7E,KAAK,EAAE2C,SAAS;IAChB/C,QAAQ,EAAG6E,KAAK,IAAI;MACnBF,iBAAiB,CAAC,MAAM,CAAC,CAACE,KAAK,CAACC,MAAM,CAAC1E,KAAK,CAAC;IAC9C;EAAC,EACA,CACG,EACNzB,0DAAA,YAAM,EACNA,0DAAA,CAAC+B,aAAa;IACbC,aAAa,EAAEA,aAAa;IAC5BC,iBAAiB,EAAEA;EAAiB,EACnC,CACG,EACNjC,0DAAA;IAAKc,SAAS,EAAC;EAAQ,GACtBd,0DAAA,cACCA,0DAAA,CAACS,iEAAW;IAAC0B,OAAO,EAAEA,OAAO;IAAEnB,KAAK,EAAEsD;EAAU,EAAI,EACpDtE,0DAAA;IAAKc,SAAS,EAAC;EAAO,GACrBd,0DAAA,CAACkC,WAAW;IAACC,OAAO,EAAEA;EAAO,EAAI,CAC5B,CACD,EACNnC,0DAAA;IACCwG,IAAI,EAAC,0BAA0B;IAC/BL,MAAM,EAAC,QAAQ;IACfrF,SAAS,EAAC;EAAM,GAEhBd,0DAAA;IACCyG,GAAG,EAAC,mBAAmB;IACvBC,GAAG,EAAC;EAAkG,EACrG,CACC,CACC,CACD,CACD;AAER;AAEA,iEAAe/D,GAAG;;;;;;;;;;;;;;;;AClYQ;AAEpB,SAAUxC,QAAQA,CAACQ,KAIxB;EACA,OACCX,0DAAA;IAAKc,SAAS,EAAC;EAAU,GACxBd,0DAAA,gBACCA,0DAAA;IAAOkB,IAAI,EAAC,UAAU;IAACG,QAAQ,EAAEV,KAAK,CAACU,QAAQ;IAAED,OAAO,EAAET,KAAK,CAACS;EAAO,EAAI,EAC1ET,KAAK,CAAC2F,KAAK,CACL,CACH;AAER;;;;;;;;;;;;;;;;ACf0B;AAEpB,SAAUlG,WAAWA,CAACO,KAM3B;EACA,OACCX,0DAAA,cACCA,0DAAA,gBACEW,KAAK,CAAC2F,KAAK,EACZtG,0DAAA;IACCkB,IAAI,EAAC,QAAQ;IACbyF,QAAQ,EAAEhG,KAAK,CAAC4F,UAAU;IAC1B9E,KAAK,EAAEd,KAAK,CAACc,KAAK;IAClBJ,QAAQ,EAAEV,KAAK,CAACU,QAAQ;IACxBuF,MAAM,EAAEjG,KAAK,CAACiG,MAAM;IACpBC,IAAI,EAAC;EAAM,EACV,CACK,CACH;AAER;;;;;;;;;;;;;;;;ACxBiD;AAGjD,SAASE,YAAYA,CAACpG,KAA8B;EACnD;EACA;EACA,MAAMqG,OAAO,GAAG,MAAM;EACtB,MAAMC,QAAQ,GAAGH,6CAAM,CAAoB,IAAI,CAAC;EAChD,MAAMI,cAAc,GAAG;IACtBC,IAAI,EAAE,oBAAoB;IAC1BC,SAAS,EAAE,uBAAuB;IAClCC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE;GACN;EAEDpH,gDAAS,CAAC,MAAK;IACd,IAAI,CAAC+G,QAAQ,CAACM,OAAO,IAAI,CAAC5G,KAAK,CAACwB,OAAO,CAACqF,IAAI,CAACC,MAAM,IAAI9G,KAAK,CAACwB,OAAO,CAACqF,IAAI,CAACC,MAAM,GAAGT,OAAO,EAAE;MAC3F;IACD;IAEA,MAAMU,OAAO,GAAGT,QAAQ,CAACM,OAAO,CAACI,UAAU,CAAC,IAAI,CAAC;IAEjD,IAAI,CAACD,OAAO,EAAE;MACb;IACD;IAEA;IACAA,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEX,QAAQ,CAACM,OAAO,CAACM,KAAK,EAAEZ,QAAQ,CAACM,OAAO,CAAC5B,MAAM,CAAC;IAExE;IACAhF,KAAK,CAACwB,OAAO,CAACqF,IAAI,CAACM,OAAO,CAAEC,GAAG,IAAI;MAClCL,OAAO,CAACM,SAAS,GAAGd,cAAc,CAACa,GAAG,CAACE,QAAQ,CAAC;MAChDP,OAAO,CAACQ,QAAQ,CAACH,GAAG,CAACI,CAAC,EAAEJ,GAAG,CAACK,CAAC,EAAEL,GAAG,CAACF,KAAK,EAAEE,GAAG,CAACpC,MAAM,CAAC;IACtD,CAAC,CAAC;EACH,CAAC,EAAE,CAAC0C,IAAI,CAACC,SAAS,CAAC3H,KAAK,CAACwB,OAAO,CAAC,CAAC,CAAC;EAEnC,IAAIxB,KAAK,CAACwB,OAAO,CAACqF,IAAI,CAACC,MAAM,GAAGT,OAAO,EAAE;IACxC,OACChH,0DAAA;MACCc,SAAS,EAAC,eAAe;MACzByH,KAAK,EAAE;QACNC,aAAa,EAAE,GAAG7H,KAAK,CAACwB,OAAO,CAACG,UAAU,GAAG3B,KAAK,CAACwB,OAAO,CAACC,WAAW,GAAG,GAAG;;IAC5E,GAEDpC,0DAAA,4CAAuC,CAClC;EAER;EAEA,OACCA,0DAAA;IACCyI,GAAG,EAAExB,QAAQ;IACbY,KAAK,EAAElH,KAAK,CAACwB,OAAO,CAACG,UAAU;IAC/BqD,MAAM,EAAEhF,KAAK,CAACwB,OAAO,CAACC;EAAW,EACxB;AAEZ;AAEA;;;;;AAKM,SAAU3B,WAAWA,CAACE,KAG3B;EACA,OACCX,0DAAA;IAAKc,SAAS,EAAE,gBAAgBH,KAAK,CAACK,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,EAAE;EAAE,GACrEhB,0DAAA,CAAC+G,YAAY;IAAC5E,OAAO,EAAExB,KAAK,CAACwB;EAAO,EAAI,CACnC;AAER;;;;;;;;;;;;;;;;;;ACxEwB;;;;;;;;;;;;;;;;ACAxB;;;AAGO,MAAM7B,UAAU,GAAG;EACzBoI,MAAM,EAAE;IAAEvH,IAAI,EAAE,gBAAgB;IAAEiB,WAAW,EAAE,GAAG;IAAEE,UAAU,EAAE;EAAG,CAAE;EACrEqG,MAAM,EAAE;IAAExH,IAAI,EAAE,6BAA6B;IAAEiB,WAAW,EAAE,GAAG;IAAEE,UAAU,EAAE;EAAG,CAAE;EAClFsG,QAAQ,EAAE;IAAEzH,IAAI,EAAE,iBAAiB;IAAEiB,WAAW,EAAE,GAAG;IAAEE,UAAU,EAAE;EAAG,CAAE;EACxEuG,UAAU,EAAE;IAAE1H,IAAI,EAAE,6BAA6B;IAAEmB,UAAU,EAAE,GAAG;IAAEF,WAAW,EAAE;EAAG,CAAE;EACtF0G,MAAM,EAAE;IAAE3H,IAAI,EAAE,uBAAuB;IAAEiB,WAAW,EAAE,GAAG;IAAEE,UAAU,EAAE;EAAG,CAAE;EAC5EyG,KAAK,EAAE;IAAE5H,IAAI,EAAE,gBAAgB;IAAEiB,WAAW,EAAE,GAAG;IAAEE,UAAU,EAAE;EAAG;CAClE;AAED;;;AAGO,MAAM/B,SAAS,GAAG;EACxByI,KAAK,EAAE;IAAE7H,IAAI,EAAE,cAAc;IAAEmB,UAAU,EAAE;EAAE,CAAE;EAC/C2G,KAAK,EAAE;IAAE9H,IAAI,EAAE,cAAc;IAAEmB,UAAU,EAAE;EAAE,CAAE;EAC/C4G,MAAM,EAAE;IAAE/H,IAAI,EAAE,eAAe;IAAEmB,UAAU,EAAE;EAAG,CAAE;EAClD6G,MAAM,EAAE;IAAEhI,IAAI,EAAE,eAAe;IAAEmB,UAAU,EAAE;EAAG,CAAE;EAClD8G,MAAM,EAAE;IAAEjI,IAAI,EAAE,eAAe;IAAEmB,UAAU,EAAE;EAAG,CAAE;EAClD+G,MAAM,EAAE;IAAElI,IAAI,EAAE,eAAe;IAAEmB,UAAU,EAAE;EAAG,CAAE;EAClDoG,MAAM,EAAE;IAAEvH,IAAI,EAAE,gBAAgB;IAAEmB,UAAU,EAAE;EAAG,CAAE;EACnDgH,MAAM,EAAE;IAAEnI,IAAI,EAAE,gBAAgB;IAAEmB,UAAU,EAAE;EAAG;CACjD;;;;;;;;;;;;;;ACxBD;;;AAGO,MAAM9B,WAAW,GAKpB;EACH+I,OAAO,EAAE;IACRpI,IAAI,EAAE,eAAe;IACrBqI,KAAK,EAAGC,OAAO,IAAKpE,IAAI,CAACqE,GAAG,CAAC,CAACD,OAAO;GACrC;EACDE,MAAM,EAAE;IACPxI,IAAI,EAAE,gBAAgB;IACtBqI,KAAK,EAAGC,OAAO,IAAKpE,IAAI,CAACuE,GAAG,CAAE,CAAC,CAAC,GAAGvE,IAAI,CAACqE,GAAG,CAAC,CAACD,OAAO,CAAC,IAAIA,OAAO,EAAG,CAAC;GACpE;EACDI,IAAI,EAAE;IACL1I,IAAI,EAAE,mBAAmB;IACzBqI,KAAK,EAAGC,OAAO,IAAK,CAAC,CAAC,GAAGpE,IAAI,CAACqE,GAAG,CAAC,CAAC,CAAC,GAAGD,OAAO,CAAC,KAAK,CAAC,GAAGA,OAAO;GAC/D;EACD;EACAK,KAAK,EAAE;IACN3I,IAAI,EAAE,aAAa;IACnBqI,KAAK,EAAGC,OAAO,IAAK,CAAC,IAAI,CAAC,GAAGA,OAAO;;CAErC;;;;;;;;;;;;;;;;;AC1B2C;AAGiD;AAE7F;;;;;;;;;AASM,SAAUpJ,SAASA,CACxB4J,MAAmB,EACnBC,UAAoC,EACpClJ,KAAiB,EACjBwD,SAAkC,EAClCE,QAAgC;EAEhC,MAAM,CAACvC,OAAO,EAAEgI,UAAU,CAAC,GAAGlK,+CAAQ,CAAa;IAClDuH,IAAI,EAAE,EAAE;IACRjF,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE,CAAC;IACXH,UAAU,EAAE,CAAC;IACbF,WAAW,EAAE;GACb,CAAC;EAEF,MAAM;IACLQ,QAAQ;IACRE,SAAS;IACTM,YAAY;IACZE,UAAU;IACVE,QAAQ;IACRM,WAAW;IACXE;EAAU,CACV,GAAGiG,MAAM;EAEV/J,gDAAS,CAAC,MAAK;IACd;IACA,MAAMkK,aAAa,GAAGxI,MAAM,CAACqI,MAAM,CAACA,MAAM,CAAC,CAACI,MAAM,CAACrF,KAAK,CAAC;IAEzD,IAAIoF,aAAa,CAAC3C,MAAM,EAAE;MACzB;IACD;IAEA,IAAIzG,KAAK,KAAK,MAAM,EAAE;MACrBmJ,UAAU,CAACJ,uEAAkB,CAACE,MAAM,EAAEvF,QAAQ,EAAEwF,UAAU,CAAC,CAAC;IAC7D,CAAC,MAAM,IAAIlJ,KAAK,KAAK,OAAO,EAAE;MAC7BmJ,UAAU,CAACH,wEAAmB,CAACC,MAAM,EAAEzF,SAAS,EAAE0F,UAAU,CAAC,CAAC;IAC/D;EACD,CAAC,EAAE,CAACtH,QAAQ,EAAEE,SAAS,EAAEM,YAAY,EAAEE,UAAU,EAAEE,QAAQ,EAAEM,WAAW,EAAEE,UAAU,EAAEhD,KAAK,EAAEwD,SAAS,EAAEE,QAAQ,EAAEwF,UAAU,CAAC,CAAC;EAG9H,OAAO/H,OAAO;AACf;;;;;;;;;;;;;;;;;;;ACzD+D;AAG/D;;;;;;;;;;AAUM,SAAUmI,cAAcA,CAACnC,CAAS,EAAEC,CAAS,EAAEmC,OAAe,EAAEC,OAAe,EAAEC,MAAc;EACpG,OAAOpF,IAAI,CAACqF,IAAI,CAAC,CAACvC,CAAC,GAAGoC,OAAO,KAAK,CAAC,GAAG,CAACnC,CAAC,GAAGoC,OAAO,KAAK,CAAC,CAAC,IAAIC,MAAM;AACpE;AAEA;;;;;;;;AAQM,SAAUE,kBAAkBA,CAACC,QAAgB,EAAEC,SAAiB,EAAEC,UAAkB;EACzF,MAAML,MAAM,GAAGG,QAAQ,GAAG,CAAC;EAC3B,MAAML,OAAO,GAAGE,MAAM;EACtB,MAAMD,OAAO,GAAGC,MAAM;EACtB,IAAIM,SAAS,GAAG,EAAE;EAElB,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIyC,QAAQ,GAAGC,SAAS,EAAE1C,CAAC,IAAI0C,SAAS,EAAE;IAC1D,KAAK,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwC,QAAQ,GAAGE,UAAU,EAAE1C,CAAC,IAAI0C,UAAU,EAAE;MAC5D,MAAME,OAAO,GAAG,CACf;QAAE7C,CAAC,EAAEA,CAAC;QAAEC,CAAC,EAAEA;MAAC,CAAE,EACd;QAAED,CAAC,EAAEA,CAAC,GAAG0C,SAAS;QAAEzC,CAAC,EAAEA;MAAC,CAAE,EAC1B;QAAED,CAAC,EAAEA,CAAC;QAAEC,CAAC,EAAEA,CAAC,GAAG0C;MAAU,CAAE,EAC3B;QAAE3C,CAAC,EAAEA,CAAC,GAAG0C,SAAS;QAAEzC,CAAC,EAAEA,CAAC,GAAG0C;MAAU,CAAE,CACvC;MAED,IAAIE,OAAO,CAACC,KAAK,CAACC,MAAM,IAAIZ,cAAc,CAACY,MAAM,CAAC/C,CAAC,EAAE+C,MAAM,CAAC9C,CAAC,EAAEmC,OAAO,EAAEC,OAAO,EAAEC,MAAM,CAAC,CAAC,EAAE;QAC1FM,SAAS,CAACI,IAAI,CAAC;UAAEhD,CAAC,EAAEA,CAAC;UAAEC,CAAC,EAAEA;QAAC,CAAE,CAAC;MAC/B;IACD;EACD;EACA,OAAO2C,SAAS;AACjB;AAGA;;;;;;AAMM,SAAUK,WAAWA,CAC1B9H,UAAkB,EAClBF,YAAoB,EACpBiI,KAA+B;EAE/B,IAAI,CAAC/H,UAAU,EAAE;IAChB,OAAO,CAAC;EACT;EAEA,MAAMmG,OAAO,GAAGrG,YAAY,GAAGE,UAAU,GAAG,GAAG;EAC/C,OAAO9C,gDAAW,CAAC6K,KAAK,CAAC,CAAC7B,KAAK,CAACC,OAAO,CAAC;AACzC;AAYM,SAAUO,mBAAmBA,CAClCsB,SAAsB,EACtB5J,YAAqC,EACrCM,aAAuC;EAEvC,MAAM;IACLY,QAAQ;IACRE,SAAS;IACTM,YAAY;IACZE,UAAU;IACVQ,WAAW;IACXE;EAAU,CACV,GAAGsH,SAAS;EACb,IAAI9D,IAAI,GAAG,EAAE;EACb,MAAM/E,QAAQ,GAAG2I,WAAW,CAAC9H,UAAU,EAAEF,YAAY,EAAEpB,aAAa,CAAC;EACrE,MAAM;IAAEM,UAAU;IAAEF;EAAW,CAAE,GAAG9B,+CAAU,CAACoB,YAAY,CAAC;EAC5D,MAAM6J,gBAAgB,GAAG3I,QAAQ,GAAGkB,WAAW,GAAG,CAAC;EACnD,MAAM0H,iBAAiB,GAAG1I,SAAS,GAAGkB,UAAU,GAAG,CAAC;EAEpD,MAAMyH,UAAU,GAAGpG,IAAI,CAACqG,KAAK,CAACpJ,UAAU,GAAGiJ,gBAAgB,CAAC;EAC5D,MAAMI,aAAa,GAAGtG,IAAI,CAACqG,KAAK,CAACtJ,WAAW,GAAGoJ,iBAAiB,CAAC;EAEjE,MAAMI,UAAU,GAAG,CAACtJ,UAAU,GAAGiJ,gBAAgB,GAAGE,UAAU,IAAI,CAAC;EACnE,MAAMI,UAAU,GAAG,CAACzJ,WAAW,GAAGoJ,iBAAiB,GAAGG,aAAa,IAAI,CAAC;EAExE,MAAMG,UAAU,GAAGzG,IAAI,CAACqG,KAAK,CAACpJ,UAAU,IAAIM,QAAQ,GAAGkB,WAAW,GAAG,CAAC,CAAC,CAAC;EACxE,MAAMiI,WAAW,GAAG1G,IAAI,CAACqG,KAAK,CAACtJ,WAAW,IAAIU,SAAS,GAAGkB,UAAU,GAAG,CAAC,CAAC,CAAC;EAE1E,MAAMzB,SAAS,GAAGuJ,UAAU,GAAGC,WAAW;EAE1C,MAAMvJ,QAAQ,GAAG6C,IAAI,CAACqG,KAAK,CAACjJ,QAAQ,GAAGF,SAAS,CAAC;EAEjD,IAAIyJ,SAAS,GAAG,IAAIC,KAAK,CAAC1J,SAAS,CAAC,CAAC2J,IAAI,CAAC,WAAW,CAAC;EACtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3J,QAAQ,EAAE2J,CAAC,EAAE,EAAE;IAClCH,SAAS,CAACG,CAAC,CAAC,GAAG,MAAM;EACtB;EAEA,KAAK,IAAIA,CAAC,GAAGH,SAAS,CAACvE,MAAM,GAAG,CAAC,EAAE0E,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC9C,MAAMC,CAAC,GAAG/G,IAAI,CAACqG,KAAK,CAACrG,IAAI,CAACgH,MAAM,EAAE,IAAIF,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACH,SAAS,CAACG,CAAC,CAAC,EAAEH,SAAS,CAACI,CAAC,CAAC,CAAC,GAAG,CAACJ,SAAS,CAACI,CAAC,CAAC,EAAEJ,SAAS,CAACG,CAAC,CAAC,CAAC;EAC5D;EAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACvE,MAAM,EAAE0E,CAAC,EAAE,EAAE;IAC1C,MAAMG,GAAG,GAAGjH,IAAI,CAACqG,KAAK,CAACS,CAAC,GAAGV,UAAU,CAAC;IACtC,MAAMc,GAAG,GAAGJ,CAAC,GAAGV,UAAU;IAE1B,MAAMxD,QAAQ,GAAG+D,SAAS,CAACG,CAAC,CAAC;IAE7B,MAAMhE,CAAC,GAAGoE,GAAG,GAAGhB,gBAAgB,GAAGK,UAAU;IAC7C,MAAMxD,CAAC,GAAGkE,GAAG,GAAGd,iBAAiB,GAAGK,UAAU;IAE9CrE,IAAI,CAAC2E,CAAC,CAAC,GAAG;MACTlL,GAAG,EAAEkL,CAAC;MACNlE,QAAQ;MACRE,CAAC;MACDC,CAAC;MACDP,KAAK,EAAEjF,QAAQ;MACf+C,MAAM,EAAE7C;KACR;EACF;EAEA,OAAO;IACN0E,IAAI;IACJjF,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRH,UAAU;IACVF;GACA;AACF;AAEM,SAAU2H,kBAAkBA,CACjCuB,SAAsB,EACtB5J,YAAoC,EACpCM,aAAuC;EAEvC,MAAM;IACLY,QAAQ;IACRE,SAAS;IACTM,YAAY;IACZE,UAAU;IACVE,QAAQ;IACRM,WAAW;IACXE;EAAU,CACV,GAAGsH,SAAS;EAEb,IAAI9D,IAAI,GAAG,EAAE;EACb,MAAM/E,QAAQ,GAAG2I,WAAW,CAAC9H,UAAU,EAAEF,YAAY,EAAEpB,aAAa,CAAC;EACrE,MAAM;IAAEM;EAAU,CAAE,GAAG/B,8CAAS,CAACmB,YAAY,CAAC;EAE9C,IAAIqJ,SAAS,GAAGJ,kBAAkB,CAACrI,UAAU,EAAEM,QAAQ,GAAGkB,WAAW,GAAG,CAAC,EAAEhB,SAAS,GAAGkB,UAAU,GAAG,CAAC,CAAC;EACtG,IAAIzB,SAAS,GAAGwI,SAAS,CAACtD,MAAM;EAEhC,MAAMjF,QAAQ,GAAG6C,IAAI,CAACqG,KAAK,CAACjJ,QAAQ,GAAGF,SAAS,CAAC;EAEjD,IAAIyJ,SAAS,GAAG,IAAIC,KAAK,CAAC1J,SAAS,CAAC,CAAC2J,IAAI,CAAC,WAAW,CAAC;EACtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3J,QAAQ,EAAE2J,CAAC,EAAE,EAAE;IAClCH,SAAS,CAACG,CAAC,CAAC,GAAG,MAAM;EACtB;EAEA,KAAK,IAAIA,CAAC,GAAGH,SAAS,CAACvE,MAAM,GAAG,CAAC,EAAE0E,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC9C,MAAMC,CAAC,GAAG/G,IAAI,CAACqG,KAAK,CAACrG,IAAI,CAACgH,MAAM,EAAE,IAAIF,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACH,SAAS,CAACG,CAAC,CAAC,EAAEH,SAAS,CAACI,CAAC,CAAC,CAAC,GAAG,CAACJ,SAAS,CAACI,CAAC,CAAC,EAAEJ,SAAS,CAACG,CAAC,CAAC,CAAC;EAC5D;EAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACvE,MAAM,EAAE0E,CAAC,EAAE,EAAE;IAC1C,MAAMhE,CAAC,GAAG4C,SAAS,CAACoB,CAAC,CAAC,CAAChE,CAAC;IACxB,MAAMC,CAAC,GAAG2C,SAAS,CAACoB,CAAC,CAAC,CAAC/D,CAAC;IAExB,MAAMH,QAAQ,GAAG+D,SAAS,CAACG,CAAC,CAAC;IAE7B,MAAMnB,OAAO,GAAG,CACf;MAAE7C,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA;IAAC,CAAE,EACd;MAAED,CAAC,EAAEA,CAAC,GAAGvF,QAAQ;MAAEwF,CAAC,EAAEA;IAAC,CAAE,EACzB;MAAED,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA,CAAC,GAAGtF;IAAS,CAAE,EAC1B;MAAEqF,CAAC,EAAEA,CAAC,GAAGvF,QAAQ;MAAEwF,CAAC,EAAEA,CAAC,GAAGtF;IAAS,CAAE,CACrC;IAED,IAAI0J,gBAAgB,GAAGlK,UAAU,GAAGkB,QAAQ;IAE5C,IAAI,CAACwH,OAAO,CAACC,KAAK,CAACC,MAAM,IAAIZ,cAAc,CAACY,MAAM,CAAC/C,CAAC,EAAE+C,MAAM,CAAC9C,CAAC,EAAE9F,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,CAAC,EAAEkK,gBAAgB,CAAC,CAAC,EAAE;MACnHR,SAAS,CAACG,CAAC,CAAC,GAAG,SAAS;IACzB;IAEA3E,IAAI,CAAC2E,CAAC,CAAC,GAAG;MACTlL,GAAG,EAAEkL,CAAC;MACNlE,QAAQ;MACRE,CAAC;MACDC,CAAC;MACDP,KAAK,EAAEjF,QAAQ;MACf+C,MAAM,EAAE7C;KACR;EACF;EAEA,OAAO;IACN0E,IAAI;IACJjF,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRH,UAAU;IACVF,WAAW,EAAEE;GACb;AACF;;;;;;;;;;AC5NA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNiC;AACE;AAAA;AAEnCsK,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACnD,MAAMC,OAAO,GAAGF,QAAQ,CAACG,cAAc,CAAC,sBAAsB,CAAC;EAC/DN,uDAAe,cAACE,sDAAA,CAAChK,uDAAG,IAAE,CAAC,EAAEmK,OAAO,CAAC;AAClC,CAAC,CAAC,C","sources":["webpack://die-yield-calculator-wp/./src/components/App.tsx","webpack://die-yield-calculator-wp/./src/components/Checkbox/Checkbox.tsx","webpack://die-yield-calculator-wp/./src/components/NumberInput/NumberInput.tsx","webpack://die-yield-calculator-wp/./src/components/WaferCanvas/WaferCanvas.tsx","webpack://die-yield-calculator-wp/./src/config/index.ts","webpack://die-yield-calculator-wp/./src/config/sizes.ts","webpack://die-yield-calculator-wp/./src/config/yieldModels.ts","webpack://die-yield-calculator-wp/./src/hooks/useInputs.ts","webpack://die-yield-calculator-wp/./src/utils/calculations.ts","webpack://die-yield-calculator-wp/external window \"React\"","webpack://die-yield-calculator-wp/external window \"ReactDOM\"","webpack://die-yield-calculator-wp/external window \"ReactJSXRuntime\"","webpack://die-yield-calculator-wp/webpack/bootstrap","webpack://die-yield-calculator-wp/webpack/runtime/compat get default export","webpack://die-yield-calculator-wp/webpack/runtime/define property getters","webpack://die-yield-calculator-wp/webpack/runtime/hasOwnProperty shorthand","webpack://die-yield-calculator-wp/webpack/runtime/make namespace object","webpack://die-yield-calculator-wp/./src/view.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Checkbox } from \"./Checkbox/Checkbox\";\nimport { NumberInput } from \"./NumberInput/NumberInput\";\nimport { useInputs } from \"../hooks/useInputs\";\nimport { panelSizes, discSizes, yieldModels } from \"../config\";\nimport { FabResults, WaferShape } from \"../types\";\nimport { WaferCanvas } from \"./WaferCanvas/WaferCanvas\";\n\nconst ShapeSelector = (props: { shape: WaferShape, setShape: (value: WaferShape) => void }) => {\n\tconst shapes: Array<WaferShape> = [\"Disc\", \"Panel\"];\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>Shape</legend>\n\t\t\t<div className=\"radio-group\">\n\t\t\t\t{\n\t\t\t\t\tshapes.map((shape) => (\n\t\t\t\t\t\t<label className=\"radio-item\" key={shape}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"shape\"\n\t\t\t\t\t\t\t\tchecked={props.shape === shape}\n\t\t\t\t\t\t\t\tonChange={(e) => props.setShape(shape)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{shape}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</fieldset>\n\t);\n};\n\nconst DiscSizeSelect = (props: {\n\tselectedSize: keyof typeof discSizes,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\treturn (\n\t\t<label className=\"select\">\n\t\t\tDiameter\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(discSizes).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t</label>\n\t);\n};\n\nconst PanelSizeSelect = (props: {\n\tselectedSize: keyof typeof panelSizes,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\treturn (\n\t\t<label className=\"select\">\n\t\t\tDimensions\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(panelSizes).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t</label>\n\t);\n};\n\nconst ModelSelector = (props: {\n\tselectedModel: keyof typeof yieldModels,\n\thandleModelChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => (\n\t<label className=\"select\">\n\t\tYield Calculation Model\n\t\t<select value={props.selectedModel} onChange={props.handleModelChange}>\n\t\t\t{Object.entries(yieldModels).map(([key, value]) => (\n\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t{value.name}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t</label>\n);\n\nconst ResultStats = (props: {\n\tresults: FabResults;\n}) => (\n\t<ul className=\"calculations\">\n\t\t{\n\t\t\tprops.results.waferHeight ? (\n\t\t\t\t<>\n\t\t\t\t\t<li>Panel Width: {props.results.waferWidth}mm</li>\n\t\t\t\t\t<li>Panel Height: {props.results.waferHeight}mm</li>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<li>Wafer Diameter: {props.results.waferWidth}mm</li>\n\t\t\t)\n\t\t}\n\t\t<li>Total Dies: {props.results.totalDies}</li>\n\t\t<li>Good Dies: {props.results.goodDies}</li>\n\t\t<li>Fab Yield: {props.results.fabYield.toFixed(6)}</li>\n\t</ul>\n);\n\nfunction App() {\n\tconst [dieWidth, setDieWidth] = useState<string>(\"8\");\n\tconst [dieHeight, setDieHeight] = useState<string>(\"8\");\n\tconst [aspectRatio, setAspectRatio] = useState<number>(1);\n\tconst [maintainAspectRatio, setMaintainAspectRatio] = useState(true);\n\tconst [criticalArea, setCriticalArea] = useState<string>(\"64\");\n\tconst [defectRate, setDefectRate] = useState<string>(\"0.1\");\n\tconst [edgeLoss, setEdgeLoss] = useState<string>(\"0\");\n\tconst [allCritical, setAllCritical] = useState(true);\n\tconst [reticleLimit, setReticleLimit] = useState(true);\n\tconst [scribeHoriz, setScribeHoriz] = useState<string>(\"0.1\");\n\tconst [scribeVert, setScribeVert] = useState<string>(\"0.1\");\n\tconst [transHoriz, setTransHoriz] = useState<string>(\"0\");\n\tconst [transVert, setTransVert] = useState<string>(\"0.1\");\n\tconst [waferShape, setWaferShape] = useState<WaferShape>(\"Disc\");\n\tconst [panelSize, setPanelSize] = useState<keyof typeof panelSizes>(\"s300mm\");\n\tconst [discSize, setDiscSize] = useState<keyof typeof discSizes>(\"s300mm\");\n\tconst [selectedModel, setSelectedModel] = useState<keyof typeof yieldModels>(\"murphy\");\n\tconst results = useInputs({\n\t\tdieWidth: parseFloat(dieWidth),\n\t\tdieHeight: parseFloat(dieHeight),\n\t\tcriticalArea: parseFloat(criticalArea),\n\t\tdefectRate: parseFloat(defectRate),\n\t\tedgeLoss: parseFloat(edgeLoss),\n\t\tscribeHoriz: parseFloat(scribeHoriz),\n\t\tscribeVert: parseFloat(scribeVert)\n\t}, selectedModel, waferShape, panelSize, discSize);\n\n\tuseEffect(() => {\n\t\tconst dieWidthNum = parseFloat(dieWidth);\n\t\tconst dieHeightNum = parseFloat(dieHeight);\n\t\tif (maintainAspectRatio && !isNaN(dieWidthNum) && !isNaN(dieHeightNum)) {\n\t\t\tsetAspectRatio(dieWidthNum / dieHeightNum);\n\t\t}\n\t}, [dieWidth, dieHeight, maintainAspectRatio]);\n\n\tconst nullOrRound = (setter: (val: string) => void, value: string) => {\n\t\tconst valFloat = parseFloat(value);\n\n\t\tif (isNaN(valFloat)) {\n\t\t\tsetter(\"\");\n\t\t} else {\n\t\t\tconst roundedValue = Math.round(valFloat * 100) / 100;\n\t\t\tsetter(roundedValue.toString());\n\t\t}\n\t};\n\n\tconst handleDimensionChange = (dimension: \"dieWidth\" | \"dieHeight\") => (value: string) => {\n\t\tconst valNum = parseFloat(value);\n\n\t\tif (!reticleLimit || ((dimension === \"dieWidth\" && valNum <= 33) || (dimension === \"dieHeight\" && valNum <= 26))) {\n\t\t\tif (dimension === \"dieWidth\") {\n\t\t\t\tnullOrRound(setDieWidth, value);\n\n\t\t\t\tif (maintainAspectRatio && aspectRatio) {\n\t\t\t\t\tconst height = valNum / aspectRatio;\n\n\t\t\t\t\tif (!isNaN(height)) {\n\t\t\t\t\t\tnullOrRound(setDieHeight, height.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (dimension === \"dieHeight\") {\n\t\t\t\tnullOrRound(setDieHeight, value);\n\n\t\t\t\tif (maintainAspectRatio && aspectRatio) {\n\t\t\t\t\tnullOrRound(setDieWidth, `${valNum * aspectRatio}`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdimension === \"dieWidth\" ? setDieWidth(value) : setDieHeight(value);\n\t\t}\n\n\t};\n\n\tconst handleScribeSizeChange = (dimension: string) => (value: string) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setScribeHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setScribeVert, value);\n\t\t}\n\t};\n\n\tconst handleCriticalAreaChange = (value: string) => {\n\t\tnullOrRound(setCriticalArea, value);\n\t};\n\n\tconst handleDefectRateChange = (value: string) => {\n\t\tnullOrRound(setDefectRate, value);\n\t};\n\n\tconst handleEdgeLossChange = (value: string) => {\n\t\tnullOrRound(setEdgeLoss, value);\n\t};\n\n\tconst handleTransChange = (dimension: string) => (value: string) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setTransHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setTransVert, value);\n\t\t}\n\t};\n\n\tconst handleMaintainAspectRatio = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMaintainAspectRatio(event.target.checked);\n\t};\n\n\tconst handleAllCriticalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetCriticalArea(`${parseFloat(dieWidth) * parseFloat(dieHeight)}`);\n\t\tsetAllCritical(event.target.checked);\n\t};\n\n\tconst handleReticleLimitChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetReticleLimit(event.target.checked);\n\t};\n\n\tconst handleSizeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tif (waferShape === \"Panel\") {\n\t\t\tsetPanelSize(event.target.value as keyof typeof panelSizes);\n\t\t} else if (waferShape === \"Disc\") {\n\t\t\tsetDiscSize(event.target.value as keyof typeof discSizes);\n\t\t}\n\t};\n\n\tconst handleModelChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tsetSelectedModel(event.target.value as keyof typeof yieldModels);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"columns\">\n\t\t\t\t<div className=\"input panel\">\n\t\t\t\t\t<h2>Die size</h2>\n\t\t\t\t\t<div className=\"input-row--two-col\">\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Width (mm)\"\n\t\t\t\t\t\t\tvalue={dieWidth}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleDimensionChange(\"dieWidth\")(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Height (mm)\"\n\t\t\t\t\t\t\tvalue={dieHeight}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleDimensionChange(\"dieHeight\")(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisDisabled={maintainAspectRatio}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tlabel=\"Maintain Aspect Ratio\"\n\t\t\t\t\t\t\tonChange={handleMaintainAspectRatio}\n\t\t\t\t\t\t\tchecked={maintainAspectRatio}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tlabel=\"Reticle Limit (26mm x 33mm)\"\n\t\t\t\t\t\t\tonChange={handleReticleLimitChange}\n\t\t\t\t\t\t\tchecked={reticleLimit}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tlabel=\"All Critical\"\n\t\t\t\t\t\t\tonChange={handleAllCriticalChange}\n\t\t\t\t\t\t\tchecked={allCritical}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Critical Area (mm²)\"\n\t\t\t\t\t\t\tvalue={criticalArea}\n\t\t\t\t\t\t\tisDisabled={allCritical}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleCriticalAreaChange(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h2>Wafer</h2>\n\t\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t\t<ShapeSelector\n\t\t\t\t\t\t\tshape={waferShape}\n\t\t\t\t\t\t\tsetShape={setWaferShape}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twaferShape === \"Panel\" &&\n\t\t\t\t\t\t\t<PanelSizeSelect\n\t\t\t\t\t\t\t\tselectedSize={panelSize}\n\t\t\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twaferShape === \"Disc\" &&\n\t\t\t\t\t\t\t<DiscSizeSelect\n\t\t\t\t\t\t\t\tselectedSize={discSize}\n\t\t\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Defect Rate (#/cm²)\"\n\t\t\t\t\t\t\tvalue={defectRate}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleDefectRateChange(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Edge Loss (mm)\"\n\t\t\t\t\t\t\tvalue={edgeLoss}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleEdgeLossChange(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row--two-col\">\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Scribe Lines Horiz\"\n\t\t\t\t\t\t\tvalue={scribeHoriz}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleScribeSizeChange(\"horiz\")(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Scribe Lines Vert\"\n\t\t\t\t\t\t\tvalue={scribeVert}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleScribeSizeChange(\"vert\")(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-row--two-col\">\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Translation Horiz\"\n\t\t\t\t\t\t\tvalue={transHoriz}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleTransChange(\"horiz\")(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlabel=\"Translation Vert\"\n\t\t\t\t\t\t\tvalue={transVert}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\thandleTransChange(\"vert\")(event.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<ModelSelector\n\t\t\t\t\t\tselectedModel={selectedModel}\n\t\t\t\t\t\thandleModelChange={handleModelChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"output\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<WaferCanvas results={results} shape={waferShape} />\n\t\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t\t<ResultStats results={results} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://semianalysis.com\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tclassName=\"logo\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt=\"SemiAnalysis logo\"\n\t\t\t\t\t\t\tsrc=\"https://semianalysis-production.mystagingwebsite.com/wp-content/uploads/2024/07/logo-300x124.png\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\n\nexport function Checkbox(props: {\n\tlabel: string,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tchecked: boolean\n}) {\n\treturn (\n\t\t<div className=\"checkbox\">\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" onChange={props.onChange} checked={props.checked} />\n\t\t\t\t{props.label}\n\t\t\t</label>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport function NumberInput(props: {\n\tlabel: string,\n\tvalue: string,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tisDisabled?: boolean\n\tonBlur?: () => void,\n}) {\n\treturn (\n\t\t<div>\n\t\t\t<label>\n\t\t\t\t{props.label}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tdisabled={props.isDisabled}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\tonBlur={props.onBlur}\n\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Die, FabResults, WaferShape } from \"../../types\";\n\nfunction DieMapCanvas(props: { results: FabResults }) {\n\t// Don't try and draw too many dies, or performance will suffer too much and the\n\t// page may hang or crash\n\tconst maxDies = 100000;\n\tconst canvasEl = useRef<HTMLCanvasElement>(null);\n\tconst dieStateColors = {\n\t\tgood: \"rgba(6,231,6,0.77)\",\n\t\tdefective: \"rgba(151,138,129,0.8)\",\n\t\tpartial: \"yellow\",\n\t\tlost: \"red\"\n\t};\n\n\tuseEffect(() => {\n\t\tif (!canvasEl.current || !props.results.dies.length || props.results.dies.length > maxDies) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst context = canvasEl.current.getContext(\"2d\");\n\n\t\tif (!context) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear the canvas before drawing new die map\n\t\tcontext.clearRect(0, 0, canvasEl.current.width, canvasEl.current.height);\n\n\t\t// Draw each die onto the canvas\n\t\tprops.results.dies.forEach((die) => {\n\t\t\tcontext.fillStyle = dieStateColors[die.dieState];\n\t\t\tcontext.fillRect(die.x, die.y, die.width, die.height);\n\t\t});\n\t}, [JSON.stringify(props.results)]);\n\n\tif (props.results.dies.length > maxDies) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"too-many-dies\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpaddingBottom: `${props.results.waferWidth / props.results.waferHeight * 100}%`\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span>Too many dies to visualize</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<canvas\n\t\t\tref={canvasEl}\n\t\t\twidth={props.results.waferWidth}\n\t\t\theight={props.results.waferHeight}\n\t\t></canvas>\n\t);\n}\n\n/**\n * Draw a die map onto either a circular or rectangular background, depending on\n * the shape of the wafer. Dies are drawn using <canvas> and colored according\n * to their state (good, defective, etc.)\n */\nexport function WaferCanvas(props: {\n\tresults: FabResults,\n\tshape: WaferShape\n}) {\n\treturn (\n\t\t<div className={`wafer-canvas ${props.shape === 'Disc' ? 'disc' : ''}`}>\n\t\t\t<DieMapCanvas results={props.results} />\n\t\t</div>\n\t);\n}\n","export * from './sizes';\nexport * from './yieldModels';\n","/**\n * Available sizes for rectangular wafers\n */\nexport const panelSizes = {\n\ts300mm: { name: \"300 mm (12 in)\", waferHeight: 300, waferWidth: 300 },\n\ts305mm: { name: \"305 x 457 mm² (12 x 18 in²)\", waferHeight: 305, waferWidth: 457 },\n\ts457mmsq: { name: \"457 mm² (18 in)\", waferHeight: 457, waferWidth: 457 },\n\ts457x600mm: { name: \"457 x 600 mm² (18 x 24 in²)\", waferWidth: 457, waferHeight: 600 },\n\ts510mm: { name: \"510 x 515 mm² (21 in)\", waferHeight: 510, waferWidth: 515 },\n\ts600m: { name: \"600 mm (24 in)\", waferHeight: 600, waferWidth: 600 }\n};\n\n/**\n * Available sizes for round wafers\n */\nexport const discSizes = {\n\ts51mm: { name: \"51 mm (2 in)\", waferWidth: 51 },\n\ts76mm: { name: \"76 mm (3 in)\", waferWidth: 76 },\n\ts100mm: { name: \"100 mm (4 in)\", waferWidth: 100 },\n\ts125mm: { name: \"125 mm (5 in)\", waferWidth: 125 },\n\ts150mm: { name: \"150 mm (6 in)\", waferWidth: 150 },\n\ts200mm: { name: \"200 mm (8 in)\", waferWidth: 200 },\n\ts300mm: { name: \"300 mm (12 in)\", waferWidth: 300 },\n\ts450mm: { name: \"450 mm (18 in)\", waferWidth: 450 }\n};\n","/**\n * Available mathematical models for calculating yield\n */\nexport const yieldModels : {\n\t[model: string]: {\n\t\tname: string\n\t\tyield: (defects: number) => number\n\t},\n} = {\n\tpoisson: {\n\t\tname: \"Poisson Model\",\n\t\tyield: (defects) => Math.exp(-defects)\n\t},\n\tmurphy: {\n\t\tname: \"Murphy's Model\",\n\t\tyield: (defects) => Math.pow(((1 - Math.exp(-defects)) / defects), 2)\n\t},\n\trect: {\n\t\tname: \"Rectangular Model\",\n\t\tyield: (defects) => (1 - Math.exp(-2 * defects)) / (2 * defects)\n\t},\n\t//moore: {name: \"Moore's Model\"},\n\tseeds: {\n\t\tname: \"Seeds Model\",\n\t\tyield: (defects) => 1 / (1 + defects)\n\t}\n};\n","import { useEffect, useState } from \"react\";\nimport { FabResults, WaferShape } from \"../types\";\nimport { discSizes, panelSizes, yieldModels } from \"../config\";\nimport { evaluateDiscInputs, evaluatePanelInputs, InputValues } from \"../utils/calculations\";\n\n/**\n * Given the numeric inputs, selected wafer properties, and a yield model, calculate\n * the expected fabrication results.\n * @param values numeric values provided by the user via inputs\n * @param yieldModel mathematical model for calculating yield\n * @param shape wafer shape\n * @param panelSize chosen size of panel wafer\n * @param discSize chosen size of disc wafer\n */\nexport function useInputs(\n\tvalues: InputValues,\n\tyieldModel: keyof typeof yieldModels,\n\tshape: WaferShape,\n\tpanelSize: keyof typeof panelSizes,\n\tdiscSize: keyof typeof discSizes\n): FabResults {\n\tconst [results, setResults] = useState<FabResults>({\n\t\tdies: [],\n\t\ttotalDies: 0,\n\t\tgoodDies: 0,\n\t\tfabYield: 0,\n\t\twaferWidth: 0,\n\t\twaferHeight: 0\n\t});\n\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tedgeLoss,\n\t\tscribeHoriz,\n\t\tscribeVert,\n\t} = values;\n\n\tuseEffect(() => {\n\t\t// Bail out if we can't use any of the values\n\t\tconst invalidValues = Object.values(values).filter(isNaN);\n\n\t\tif (invalidValues.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (shape === \"Disc\") {\n\t\t\tsetResults(evaluateDiscInputs(values, discSize, yieldModel));\n\t\t} else if (shape === \"Panel\") {\n\t\t\tsetResults(evaluatePanelInputs(values, panelSize, yieldModel));\n\t\t}\n\t}, [dieWidth, dieHeight, criticalArea, defectRate, edgeLoss, scribeHoriz, scribeVert, shape, panelSize, discSize, yieldModel]);\n\n\n\treturn results;\n}\n","import { discSizes, panelSizes, yieldModels } from \"../config\";\nimport { FabResults } from \"../types\";\n\n/**\n * Determine whether a target position (x, y) is inside or outside a circle\n * drawn from a center point (centerX, centerY) and extends outward to a given\n * size (radius)\n * @param x horizontal position of the target\n * @param y vertical position of the target\n * @param centerX horizontal center of the circle\n * @param centerY vertical center of the circle\n * @param radius size of the circle\n */\nexport function isInsideCircle(x: number, y: number, centerX: number, centerY: number, radius: number) {\n\treturn Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2) <= radius;\n}\n\n/**\n * Given a circle with the provided diameter, determine the maximum number of\n * rectangles of a given width and height would fit fully inside it, without\n * overlapping the edges\n * @param diameter size of the circle\n * @param rectWidth width of each rectangle\n * @param rectHeight height of each rectangle\n */\nexport function rectanglesInCircle(diameter: number, rectWidth: number, rectHeight: number) {\n\tconst radius = diameter / 2;\n\tconst centerX = radius;\n\tconst centerY = radius;\n\tlet positions = [];\n\n\tfor (let x = 0; x <= diameter + rectWidth; x += rectWidth) {\n\t\tfor (let y = 0; y <= diameter + rectHeight; y += rectHeight) {\n\t\t\tconst corners = [\n\t\t\t\t{ x: x, y: y },\n\t\t\t\t{ x: x + rectWidth, y: y },\n\t\t\t\t{ x: x, y: y + rectHeight },\n\t\t\t\t{ x: x + rectWidth, y: y + rectHeight }\n\t\t\t];\n\n\t\t\tif (corners.every(corner => isInsideCircle(corner.x, corner.y, centerX, centerY, radius))) {\n\t\t\t\tpositions.push({ x: x, y: y });\n\t\t\t}\n\t\t}\n\t}\n\treturn positions;\n}\n\n\n/**\n * Determine the yield based on the provided model\n * @param defectRate decimal representing how many dies will be defective\n * @param criticalArea die area\n * @param model model to calculate the yield\n */\nexport function getFabYield(\n\tdefectRate: number,\n\tcriticalArea: number,\n\tmodel: keyof typeof yieldModels\n) {\n\tif (!defectRate) {\n\t\treturn 1;\n\t}\n\n\tconst defects = criticalArea * defectRate / 100;\n\treturn yieldModels[model].yield(defects);\n}\n\nexport type InputValues = {\n\tdieWidth: number;\n\tdieHeight: number;\n\tcriticalArea: number;\n\tdefectRate: number;\n\tedgeLoss: number;\n\tscribeHoriz: number;\n\tscribeVert: number;\n};\n\nexport function evaluatePanelInputs(\n\tinputVals: InputValues,\n\tselectedSize: keyof typeof panelSizes,\n\tselectedModel: keyof typeof yieldModels\n): FabResults {\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tscribeHoriz,\n\t\tscribeVert\n\t} = inputVals;\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth, waferHeight } = panelSizes[selectedSize];\n\tconst adjustedDieWidth = dieWidth + scribeHoriz * 2;\n\tconst adjustedDieHeight = dieHeight + scribeVert * 2;\n\n\tconst diesPerRow = Math.floor(waferWidth / adjustedDieWidth);\n\tconst diesPerColumn = Math.floor(waferHeight / adjustedDieHeight);\n\n\tconst centerHorz = (waferWidth - adjustedDieWidth * diesPerRow) / 2;\n\tconst centerVert = (waferHeight - adjustedDieHeight * diesPerColumn) / 2;\n\n\tconst countWidth = Math.floor(waferWidth / (dieWidth + scribeHoriz * 2));\n\tconst countHeight = Math.floor(waferHeight / (dieHeight + scribeVert * 2));\n\n\tconst totalDies = countWidth * countHeight;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst row = Math.floor(i / diesPerRow);\n\t\tconst col = i % diesPerRow;\n\n\t\tconst dieState = dieStates[i];\n\n\t\tconst x = col * adjustedDieWidth + centerHorz;\n\t\tconst y = row * adjustedDieHeight + centerVert;\n\n\t\tdies[i] = {\n\t\t\tkey: i,\n\t\t\tdieState,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth: dieWidth,\n\t\t\theight: dieHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth,\n\t\twaferHeight\n\t};\n}\n\nexport function evaluateDiscInputs(\n\tinputVals: InputValues,\n\tselectedSize: keyof typeof discSizes,\n\tselectedModel: keyof typeof yieldModels\n): FabResults {\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tedgeLoss,\n\t\tscribeHoriz,\n\t\tscribeVert\n\t} = inputVals;\n\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth } = discSizes[selectedSize];\n\n\tlet positions = rectanglesInCircle(waferWidth, dieWidth + scribeHoriz * 2, dieHeight + scribeVert * 2);\n\tlet totalDies = positions.length;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst x = positions[i].x;\n\t\tconst y = positions[i].y;\n\n\t\tconst dieState = dieStates[i];\n\n\t\tconst corners = [\n\t\t\t{ x: x, y: y },\n\t\t\t{ x: x + dieWidth, y: y },\n\t\t\t{ x: x, y: y + dieHeight },\n\t\t\t{ x: x + dieWidth, y: y + dieHeight }\n\t\t];\n\n\t\tlet lossCircleRadius = waferWidth - edgeLoss;\n\n\t\tif (!corners.every(corner => isInsideCircle(corner.x, corner.y, waferWidth / 2, waferWidth / 2, lossCircleRadius))) {\n\t\t\tdieStates[i] = \"partial\";\n\t\t}\n\n\t\tdies[i] = {\n\t\t\tkey: i,\n\t\t\tdieState,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth: dieWidth,\n\t\t\theight: dieHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth,\n\t\twaferHeight: waferWidth,\n\t};\n}\n","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst domNode = document.getElementById('die-yield-calculator');\n\tReactDOM.render(<App />, domNode);\n});\n"],"names":["React","useState","useEffect","Checkbox","NumberInput","useInputs","panelSizes","discSizes","yieldModels","WaferCanvas","ShapeSelector","props","shapes","createElement","className","map","shape","key","type","name","checked","onChange","e","setShape","DiscSizeSelect","value","selectedSize","handleSizeChange","Object","entries","PanelSizeSelect","ModelSelector","selectedModel","handleModelChange","ResultStats","results","waferHeight","Fragment","waferWidth","totalDies","goodDies","fabYield","toFixed","App","dieWidth","setDieWidth","dieHeight","setDieHeight","aspectRatio","setAspectRatio","maintainAspectRatio","setMaintainAspectRatio","criticalArea","setCriticalArea","defectRate","setDefectRate","edgeLoss","setEdgeLoss","allCritical","setAllCritical","reticleLimit","setReticleLimit","scribeHoriz","setScribeHoriz","scribeVert","setScribeVert","transHoriz","setTransHoriz","transVert","setTransVert","waferShape","setWaferShape","panelSize","setPanelSize","discSize","setDiscSize","setSelectedModel","parseFloat","dieWidthNum","dieHeightNum","isNaN","nullOrRound","setter","valFloat","roundedValue","Math","round","toString","handleDimensionChange","dimension","valNum","height","handleScribeSizeChange","handleCriticalAreaChange","handleDefectRateChange","handleEdgeLossChange","handleTransChange","handleMaintainAspectRatio","event","target","handleAllCriticalChange","handleReticleLimitChange","label","isDisabled","href","alt","src","disabled","onBlur","step","useRef","DieMapCanvas","maxDies","canvasEl","dieStateColors","good","defective","partial","lost","current","dies","length","context","getContext","clearRect","width","forEach","die","fillStyle","dieState","fillRect","x","y","JSON","stringify","style","paddingBottom","ref","s300mm","s305mm","s457mmsq","s457x600mm","s510mm","s600m","s51mm","s76mm","s100mm","s125mm","s150mm","s200mm","s450mm","poisson","yield","defects","exp","murphy","pow","rect","seeds","evaluateDiscInputs","evaluatePanelInputs","values","yieldModel","setResults","invalidValues","filter","isInsideCircle","centerX","centerY","radius","sqrt","rectanglesInCircle","diameter","rectWidth","rectHeight","positions","corners","every","corner","push","getFabYield","model","inputVals","adjustedDieWidth","adjustedDieHeight","diesPerRow","floor","diesPerColumn","centerHorz","centerVert","countWidth","countHeight","dieStates","Array","fill","i","j","random","row","col","lossCircleRadius","ReactDOM","jsx","_jsx","document","addEventListener","domNode","getElementById","render"],"sourceRoot":""}