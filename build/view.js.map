{"version":3,"file":"view.js","mappings":"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","sources":["webpack://die-yield-calculator-wp/./src/components/App.tsx","webpack://die-yield-calculator-wp/./src/components/Checkbox/Checkbox.tsx","webpack://die-yield-calculator-wp/./src/components/NumberInput/NumberInput.tsx","webpack://die-yield-calculator-wp/./src/config/sizes.ts","webpack://die-yield-calculator-wp/./src/config/yieldModels.ts","webpack://die-yield-calculator-wp/./src/hooks/useInputs.ts","webpack://die-yield-calculator-wp/./src/utils/calculations.ts","webpack://die-yield-calculator-wp/external window \"React\"","webpack://die-yield-calculator-wp/external window \"ReactDOM\"","webpack://die-yield-calculator-wp/external window \"ReactJSXRuntime\"","webpack://die-yield-calculator-wp/webpack/bootstrap","webpack://die-yield-calculator-wp/webpack/runtime/compat get default export","webpack://die-yield-calculator-wp/webpack/runtime/define property getters","webpack://die-yield-calculator-wp/webpack/runtime/hasOwnProperty shorthand","webpack://die-yield-calculator-wp/webpack/runtime/make namespace object","webpack://die-yield-calculator-wp/./src/view.js"],"sourcesContent":["import React, { useState, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { Checkbox } from \"./Checkbox/Checkbox\";\nimport { NumberInput } from \"./NumberInput/NumberInput\";\nimport useInputs from \"../hooks/useInputs\";\nimport { PanelSizes, DiscSizes } from \"../config/sizes\";\nimport { YieldModels } from \"../config/yieldModels\";\nimport { WaferShape } from \"../types/wafers\";\nimport { Die, FabResults } from \"../types/dies\";\n\nconst ShapeSelector = (props: { shape: WaferShape, setShape: (value: WaferShape) => void }) => (\n\t<div className=\"input-group\">\n\t\t<label>\n\t\t\tShape:\n\t\t\t<select value={props.shape} onChange={(e) => props.setShape(e.target.value as WaferShape)}>\n\t\t\t\t<option value=\"Panel\">Panel</option>\n\t\t\t\t<option value=\"Disc\">Wafer</option>\n\t\t\t</select>\n\t\t</label>\n\t</div>\n);\n\nconst DiscSizeSelect = (props: {\n\tselectedSize: keyof typeof DiscSizes,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\tconst sizeInfo = DiscSizes[props.selectedSize];\n\n\treturn (\n\t\t<div>\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(DiscSizes).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<div>Width: {sizeInfo.waferWidth} mm\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst PanelSizeSelect = (props: {\n\tselectedSize: keyof typeof PanelSizes,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\tconst sizeInfo = PanelSizes[props.selectedSize];\n\n\treturn (\n\t\t<div>\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(PanelSizes).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<div>Width: {sizeInfo.waferWidth} mm, Height: {sizeInfo.waferHeight} mm\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst ModelSelector = (props: {\n\tselectedModel: keyof typeof YieldModels,\n\thandleModelChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => (\n\t<div>\n\t\t<select value={props.selectedModel} onChange={props.handleModelChange}>\n\t\t\t{Object.entries(YieldModels).map(([key, value]) => (\n\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t{value.name}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t\t{}\n\t\t<div>\n\t\t\tModel: {YieldModels[props.selectedModel].name}\n\t\t</div>\n\t</div>\n);\n\nconst Calculations = (props: {\n\tresults: FabResults\n}) => (\n\t<div className=\"calculations\">\n\t\ttotalDies: {props.results.totalDies}, Good Wafers: {props.results.goodDies}, Fab\n\t\tYield: {props.results.fabYield}\n\t</div>\n);\n\n\nconst DiscCanvas = (props: { results: FabResults }) => {\n\t// Bail out if there are too many dies to draw, otherwise the browser will hang\n\tif (props.results.totalDies > 9999) {\n\t\treturn \"Too many dies to visualize\";\n\t}\n\n\treturn (\n\t\t<svg width={props.results.waferWidth} height={props.results.waferWidth} style={{ border: \"1px solid black\" }}>\n\t\t\t<circle\n\t\t\t\tcx={props.results.waferWidth / 2}\n\t\t\t\tcy={props.results.waferWidth / 2}\n\t\t\t\tr={Math.min(props.results.waferWidth, props.results.waferWidth) / 2}\n\t\t\t\tstroke=\"black\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\tfill=\"none\" />\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\tprops.results.dies.map((die) => (<Die {...die} />))\n\t\t\t\t}\n\t\t\t</>\n\t\t</svg>\n\t);\n};\n\nconst PanelCanvas = (props: { results: FabResults }) => {\n\t// Bail out if there are too many dies to draw, otherwise the browser will hang\n\tif (props.results.totalDies > 9999) {\n\t\treturn \"Too many dies to visualize\";\n\t}\n\n\treturn (\n\t\t<svg width={props.results.waferWidth} height={props.results.waferHeight} style={{ border: \"1px solid black\" }}>\n\t\t\t{\n\t\t\t\tprops.results.dies.map((die) => (\n\t\t\t\t\t<Die {...die} />\n\t\t\t\t))\n\t\t\t}\n\t\t</svg>\n\t);\n};\n\n\nconst Die = (props: Die) => {\n\tconst stateColors = {\n\t\tgood: \"green\",\n\t\tdefective: \"grey\",\n\t\tpartial: \"yellow\",\n\t\tlost: \"red\"\n\t};\n\n\treturn (\n\t\t<rect\n\t\t\tx={props.x}\n\t\t\ty={props.y}\n\t\t\twidth={props.width}\n\t\t\theight={props.height}\n\t\t\tfill={stateColors[props.dieState]}\n\t\t/>\n\t);\n};\n\nfunction App() {\n\tconst [dieWidth, setDieWidth] = useState<string>(\"8\");\n\tconst [dieHeight, setDieHeight] = useState<string>(\"8\");\n\tconst [aspectRatio, setAspectRatio] = useState<number>(1);\n\tconst [maintainAspectRatio, setMaintainAspectRatio] = useState(true);\n\tconst [criticalArea, setCriticalArea] = useState<string>(\"64\");\n\tconst [defectRate, setDefectRate] = useState<string>(\"0.1\");\n\tconst [edgeLoss, setEdgeLoss] = useState<string>(\"0\");\n\tconst [allCritical, setAllCritical] = useState(true);\n\tconst [recticleLimit, setRecticleLimit] = useState(true);\n\tconst [scribeHoriz, setScribeHoriz] = useState<string>(\"0.1\");\n\tconst [scribeVert, setScribeVert] = useState<string>(\"0.1\");\n\tconst [transHoriz, setTransHoriz] = useState<string>(\"0\");\n\tconst [transVert, setTransVert] = useState<string>(\"0.1\");\n\tconst [waferShape, setWaferShape] = useState<WaferShape>(\"Panel\");\n\tconst [panelSize, setPanelSize] = useState<keyof typeof PanelSizes>(\"s300mm\");\n\tconst [discSize, setDiscSize] = useState<keyof typeof DiscSizes>(\"s300mm\");\n\tconst [selectedModel, setSelectedModel] = useState<keyof typeof YieldModels>(\"murphy\");\n\tconst results = useInputs({\n\t\tdieWidth: parseFloat(dieWidth),\n\t\tdieHeight: parseFloat(dieHeight),\n\t\tcriticalArea: parseFloat(criticalArea),\n\t\tdefectRate: parseFloat(defectRate),\n\t\tedgeLoss: parseFloat(edgeLoss),\n\t\tscribeHoriz: parseFloat(scribeHoriz),\n\t\tscribeVert: parseFloat(scribeVert)\n\t}, selectedModel, waferShape, panelSize, discSize);\n\n\tuseEffect(() => {\n\t\tconst dieWidthNum = parseFloat(dieWidth);\n\t\tconst dieHeightNum = parseFloat(dieHeight);\n\t\tif (maintainAspectRatio && !isNaN(dieWidthNum) && !isNaN(dieHeightNum)) {\n\t\t\tsetAspectRatio(dieWidthNum / dieHeightNum);\n\t\t}\n\t}, [dieWidth, dieHeight, maintainAspectRatio]);\n\n\tconst nullOrRound = (setter: (val: string) => void, value: string) => {\n\t\tconst valFloat = parseFloat(value);\n\n\t\tif (isNaN(valFloat)) {\n\t\t\tsetter(\"\");\n\t\t} else {\n\t\t\tconst roundedValue = Math.round(valFloat * 100) / 100;\n\t\t\tsetter(roundedValue.toString());\n\t\t}\n\t};\n\n\tconst handleBlur = (setter: Dispatch<SetStateAction<string>>) => () => {\n\t\tsetter((prevValue) => (prevValue));\n\t};\n\n\tconst handleDimensionChange = (dimension: \"dieWidth\" | \"dieHeight\") => (value: string) => {\n\t\tconst valNum = parseFloat(value);\n\n\t\tif (!recticleLimit || ((dimension === \"dieWidth\" && valNum <= 33) || (dimension === \"dieHeight\" && valNum <= 26))) {\n\t\t\tif (dimension === \"dieWidth\") {\n\t\t\t\tnullOrRound(setDieWidth, value);\n\n\t\t\t\tif (maintainAspectRatio && aspectRatio) {\n\t\t\t\t\tconst height = valNum / aspectRatio;\n\n\t\t\t\t\tif (!isNaN(height)) {\n\t\t\t\t\t\tnullOrRound(setDieHeight, height.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (dimension === \"dieHeight\") {\n\t\t\t\tnullOrRound(setDieHeight, value);\n\n\t\t\t\tif (maintainAspectRatio && aspectRatio) {\n\t\t\t\t\tnullOrRound(setDieWidth, `${valNum * aspectRatio}`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdimension === \"dieWidth\" ? setDieWidth(value) : setDieHeight(value);\n\t\t}\n\n\t};\n\n\tconst handleScribeSizeChange = (dimension: string) => (value: string) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setScribeHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setScribeVert, value);\n\t\t}\n\t};\n\n\tconst handleCriticalAreaChange = (value: string) => {\n\t\tnullOrRound(setCriticalArea, value);\n\t};\n\n\tconst handleDefectRateChange = (value: string) => {\n\t\tnullOrRound(setDefectRate, value);\n\t};\n\n\tconst handleEdgeLossChange = (value: string) => {\n\t\tnullOrRound(setEdgeLoss, value);\n\t};\n\n\tconst handleTransChange = (dimension: string) => (value: string) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setTransHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setTransVert, value);\n\t\t}\n\t};\n\n\tconst handleMaintainAspectRatio = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMaintainAspectRatio(event.target.checked);\n\t};\n\n\tconst handleAllCriticalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetCriticalArea(`${parseFloat(dieWidth) * parseFloat(dieHeight)}`);\n\t\tsetAllCritical(event.target.checked);\n\t};\n\n\tconst handleRecticleLimitChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetRecticleLimit(event.target.checked);\n\t};\n\n\tconst handleSizeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tif (waferShape === \"Panel\") {\n\t\t\tsetPanelSize(event.target.value as keyof typeof PanelSizes);\n\t\t} else if (waferShape === \"Disc\") {\n\t\t\tsetDiscSize(event.target.value as keyof typeof DiscSizes);\n\t\t}\n\t};\n\n\tconst handleModelChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tsetSelectedModel(event.target.value as keyof typeof YieldModels);\n\t};\n\n\tconst numberInputs = [\n\t\t{\n\t\t\tlabel: \"Die Width (mm)\",\n\t\t\tvalue: dieWidth,\n\t\t\tonChange: handleDimensionChange(\"dieWidth\"),\n\t\t\tonBlur: handleBlur(setDieWidth),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Die Height (mm)\",\n\t\t\tvalue: dieHeight,\n\t\t\tonChange: handleDimensionChange(\"dieHeight\"),\n\t\t\tonBlur: handleBlur(setDieHeight),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Critical Area (mm²)\",\n\t\t\tvalue: criticalArea,\n\t\t\tonChange: handleCriticalAreaChange,\n\t\t\tonBlur: handleBlur(setCriticalArea),\n\t\t\tisDisabled: allCritical\n\t\t},\n\t\t{\n\t\t\tlabel: \"Defect Rate (#/cm²)\",\n\t\t\tvalue: defectRate,\n\t\t\tonChange: handleDefectRateChange,\n\t\t\tonBlur: handleBlur(setDefectRate),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Edge Loss (mm)\",\n\t\t\tvalue: edgeLoss,\n\t\t\tonChange: handleEdgeLossChange,\n\t\t\tonBlur: handleBlur(setEdgeLoss),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Scribe Lines Horiz\",\n\t\t\tvalue: scribeHoriz,\n\t\t\tonChange: handleScribeSizeChange(\"horiz\"),\n\t\t\tonBlur: handleBlur(setScribeHoriz),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Scribe Lines Vert\",\n\t\t\tvalue: scribeVert,\n\t\t\tonChange: handleScribeSizeChange(\"vert\"),\n\t\t\tonBlur: handleBlur(setScribeVert),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Translation Horiz\",\n\t\t\tvalue: transHoriz,\n\t\t\tonChange: handleTransChange(\"horiz\"),\n\t\t\tonBlur: handleBlur(setTransHoriz),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Translation Vert\",\n\t\t\tvalue: transVert,\n\t\t\tonChange: handleTransChange(\"vert\"),\n\t\t\tonBlur: handleBlur(setTransVert),\n\t\t\tisDisabled: false\n\t\t}\n\t];\n\n\tconst checkboxes = [\n\t\t{ label: \"Maintain Aspect Ratio\", onChange: handleMaintainAspectRatio, checked: maintainAspectRatio },\n\t\t{ label: \"Recticle Limit\", onChange: handleRecticleLimitChange, checked: recticleLimit },\n\t\t{ label: \"All Critical\", onChange: handleAllCriticalChange, checked: allCritical },\n\t\t{\n\t\t\tlabel: \"Centering\", onChange: () => {\n\t\t\t}, checked: false\n\t\t}\n\t];\n\n\treturn (\n\t\t<div className=\"calc\">\n\t\t\t<div className=\"control-panel\">\n\t\t\t\t{numberInputs.map(input => (\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tkey={input.label}\n\t\t\t\t\t\tlabel={input.label}\n\t\t\t\t\t\tvalue={input.value}\n\t\t\t\t\t\tisDisabled={input.isDisabled}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\tinput.onChange(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{checkboxes.map(input => (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tkey={input.label}\n\t\t\t\t\t\tlabel={input.label}\n\t\t\t\t\t\tonChange={input.onChange}\n\t\t\t\t\t\tchecked={input.checked}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t<ShapeSelector\n\t\t\t\t\tshape={waferShape}\n\t\t\t\t\tsetShape={setWaferShape}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\twaferShape === \"Panel\" &&\n\t\t\t\t\t<PanelSizeSelect\n\t\t\t\t\t\tselectedSize={panelSize}\n\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\twaferShape === \"Disc\" &&\n\t\t\t\t\t<DiscSizeSelect\n\t\t\t\t\t\tselectedSize={discSize}\n\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<ModelSelector\n\t\t\t\t\tselectedModel={selectedModel}\n\t\t\t\t\thandleModelChange={handleModelChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"calculations\">\n\t\t\t\t<Calculations\n\t\t\t\t\tresults={results} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{waferShape === \"Panel\" ? (\n\t\t\t\t\t<PanelCanvas results={results} />\n\t\t\t\t) : waferShape === \"Disc\" ? (\n\t\t\t\t\t<DiscCanvas results={results} />\n\t\t\t\t) : null}\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\n\nexport function Checkbox(props: {\n\tlabel: string,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tchecked: boolean\n}) {\n\treturn (\n\t\t<label className=\"checkbox\">\n\t\t\t{props.label}\n\t\t\t<input type=\"checkbox\" onChange={props.onChange} checked={props.checked} />\n\t\t</label>\n\t);\n}\n","import React from \"react\";\n\nexport function NumberInput(props: {\n\tlabel: string,\n\tvalue: string,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tisDisabled: boolean\n\tonBlur?: () => void,\n}) {\n\treturn (\n\t\t<div className=\"input-group\">\n\t\t\t<label>\n\t\t\t\t{props.label}:\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tdisabled={props.isDisabled}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\tonBlur={props.onBlur}\n\t\t\t\t\tstep=\"0.01\" />\n\t\t\t</label>\n\t\t</div>\n\t);\n}\n","export const PanelSizes = {\n\ts300mm: { name: \"300 mm (12 in)\", waferHeight: 300, waferWidth: 300 },\n\ts305mm: { name: \"305 x 457 mm² (12 x 18 in²)\", waferHeight: 305, waferWidth: 457 },\n\ts457mmsq: { name: \"457 mm² (18 in)\", waferHeight: 457, waferWidth: 457 },\n\ts457x600mm: { name: \"457 x 600 mm² (18 x 24 in²)\", waferHeight: 457, waferWidth: 600 },\n\ts510mm: { name: \"510 x 515 mm² (21 in)\", waferHeight: 510, waferWidth: 515 },\n\ts600m: { name: \"600 mm (24 in)\", waferHeight: 600, waferWidth: 600 }\n};\n\nexport const DiscSizes = {\n\ts51mm: { name: \"51 mm (2 in)\", waferWidth: 51 },\n\ts76mm: { name: \"76 mm (3 in)\", waferWidth: 76 },\n\ts100mm: { name: \"100 mm (4 in)\", waferWidth: 100 },\n\ts125mm: { name: \"125 mm (5 in)\", waferWidth: 125 },\n\ts150mm: { name: \"150 mm (6 in)\", waferWidth: 150 },\n\ts200mm: { name: \"200 mm (8 in)\", waferWidth: 200 },\n\ts300mm: { name: \"300 mm (12 in)\", waferWidth: 300 },\n\ts450mm: { name: \"450 mm (18 in)\", waferWidth: 450 }\n};\n","export const YieldModels = {\n\tpoisson: { name: \"Poisson Model\" },\n\tmurphy: { name: \"Murphy's Model\" },\n\trect: { name: \"Rectangular Model\" },\n\t//moore: {name: \"Moore's Model\"},\n\tseeds: { name: \"Seeds Model\" }\n};\n","import { useEffect, useState } from \"react\";\nimport { WaferShape } from \"../types/wafers\";\nimport { DiscSizes, PanelSizes } from \"../config/sizes\";\nimport { evaluateDiscInputs, evaluatePanelInputs, InputValues } from \"../utils/calculations\";\nimport { YieldModels } from \"../config/yieldModels\";\nimport { FabResults } from \"../types/dies\";\n\n/**\n * Given the numeric inputs, selected wafer properties, and a yield model, calculate\n * the expected fabrication results.\n * @param values numeric values provided by the user via inputs\n * @param yieldModel mathematical model for calculating yield\n * @param shape wafer shape\n * @param panelSize chosen size of panel wafer\n * @param discSize chosen size of disc wafer\n */\nexport default function useInputs(\n\tvalues: InputValues,\n\tyieldModel: keyof typeof YieldModels,\n\tshape: WaferShape,\n\tpanelSize: keyof typeof PanelSizes,\n\tdiscSize: keyof typeof DiscSizes\n): FabResults {\n\tconst [results, setResults] = useState<FabResults>({\n\t\tdies: [],\n\t\ttotalDies: 0,\n\t\tgoodDies: 0,\n\t\tfabYield: 0,\n\t\twaferWidth: 0,\n\t\twaferHeight: 0\n\t});\n\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tedgeLoss,\n\t\tscribeHoriz,\n\t\tscribeVert,\n\t} = values;\n\n\tuseEffect(() => {\n\t\t// Bail out if we can't use any of the values\n\t\tconst invalidValues = Object.values(values).filter(isNaN);\n\n\t\tif (invalidValues.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (shape === \"Disc\") {\n\t\t\tsetResults(evaluateDiscInputs(values, discSize, yieldModel));\n\t\t} else if (shape === \"Panel\") {\n\t\t\tsetResults(evaluatePanelInputs(values, panelSize, yieldModel));\n\t\t}\n\t}, [dieWidth, dieHeight, criticalArea, defectRate, edgeLoss, scribeHoriz, scribeVert, shape, panelSize, discSize, yieldModel]);\n\n\n\treturn results;\n}\n","import { DiscSizes, PanelSizes } from \"../config/sizes\";\nimport { YieldModels } from \"../config/yieldModels\";\nimport { FabResults } from \"../types/dies\";\n\n/**\n * Determine whether a target position (x, y) is inside or outside a circle\n * drawn from a center point (centerX, centerY) and extends outward to a given\n * size (radius)\n * @param x horizontal position of the target\n * @param y vertical position of the target\n * @param centerX horizontal center of the circle\n * @param centerY vertical center of the circle\n * @param radius size of the circle\n */\nexport function isInsideCircle(x: number, y: number, centerX: number, centerY: number, radius: number) {\n\treturn Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2) <= radius;\n}\n\n/**\n * Given a circle with the provided diameter, determine the maximum number of\n * rectangles of a given width and height would fit fully inside it, without\n * overlapping the edges\n * @param diameter size of the circle\n * @param rectWidth width of each rectangle\n * @param rectHeight height of each rectangle\n */\nexport function rectanglesInCircle(diameter: number, rectWidth: number, rectHeight: number) {\n\tconst radius = diameter / 2;\n\tconst centerX = radius;\n\tconst centerY = radius;\n\tlet positions = [];\n\n\tfor (let x = 0; x <= diameter + rectWidth; x += rectWidth) {\n\t\tfor (let y = 0; y <= diameter + rectHeight; y += rectHeight) {\n\t\t\tconst corners = [\n\t\t\t\t{ x: x, y: y },\n\t\t\t\t{ x: x + rectWidth, y: y },\n\t\t\t\t{ x: x, y: y + rectHeight },\n\t\t\t\t{ x: x + rectWidth, y: y + rectHeight }\n\t\t\t];\n\n\t\t\tif (corners.every(corner => isInsideCircle(corner.x, corner.y, centerX, centerY, radius))) {\n\t\t\t\tpositions.push({ x: x, y: y });\n\t\t\t}\n\t\t}\n\t}\n\treturn positions;\n}\n\n\n/**\n * Determine the yield based on the provided model\n * @param defectRate decimal representing how many dies will be defective\n * @param criticalArea die area\n * @param model model to calculate the yield\n */\nexport function getFabYield(defectRate: number, criticalArea: number, model: keyof typeof YieldModels) {\n\tif (!defectRate) {\n\t\treturn 1;\n\t}\n\n\tconst defects = criticalArea * defectRate / 100;\n\tswitch (model) {\n\t\tcase (\"poisson\"):\n\t\t\treturn Math.exp(-defects);\n\t\tcase (\"murphy\"):\n\t\t\treturn Math.pow(((1 - Math.exp(-defects)) / defects), 2);\n\t\tcase (\"rect\"):\n\t\t\treturn (1 - Math.exp(-2 * defects)) / (2 * defects);\n\t\t//case ('moore'):\n\t\t//  return Math.exp(Math.sqrt(-defects));\n\t\tcase (\"seeds\"):\n\t\t\treturn 1 / (1 + defects);\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n\nexport type InputValues = {\n\tdieWidth: number;\n\tdieHeight: number;\n\tcriticalArea: number;\n\tdefectRate: number;\n\tedgeLoss: number;\n\tscribeHoriz: number;\n\tscribeVert: number;\n};\n\nexport function evaluatePanelInputs(\n\tinputVals: InputValues,\n\tselectedSize: keyof typeof PanelSizes,\n\tselectedModel: keyof typeof YieldModels): FabResults {\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tscribeHoriz,\n\t\tscribeVert\n\t} = inputVals;\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth, waferHeight } = PanelSizes[selectedSize];\n\tconst adjustedDieWidth = dieWidth + scribeHoriz * 2;\n\tconst adjustedDieHeight = dieHeight + scribeVert * 2;\n\n\tconst diesPerRow = Math.floor(waferWidth / adjustedDieWidth);\n\tconst diesPerColumn = Math.floor(waferHeight / adjustedDieHeight);\n\n\tconst centerHorz = (waferWidth - adjustedDieWidth * diesPerRow) / 2;\n\tconst centerVert = (waferHeight - adjustedDieHeight * diesPerColumn) / 2;\n\n\tconst countWidth = Math.floor(waferWidth / (dieWidth + scribeHoriz * 2));\n\tconst countHeight = Math.floor(waferHeight / (dieHeight + scribeVert * 2));\n\n\tconst totalDies = countWidth * countHeight;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst row = Math.floor(i / diesPerRow);\n\t\tconst col = i % diesPerRow;\n\n\t\tconst dieState = dieStates[i];\n\n\t\tconst x = col * adjustedDieWidth + centerHorz;\n\t\tconst y = row * adjustedDieHeight + centerVert;\n\n\t\tdies[i] = {\n\t\t\tkey: i,\n\t\t\tdieState,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth: dieWidth,\n\t\t\theight: dieHeight,\n\t\t};\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth,\n\t\twaferHeight\n\t};\n}\n\nexport function evaluateDiscInputs(\n\tinputVals: InputValues,\n\tselectedSize: keyof typeof DiscSizes,\n\tselectedModel: keyof typeof YieldModels\n): FabResults {\n\tconst {\n\t\tdieWidth,\n\t\tdieHeight,\n\t\tcriticalArea,\n\t\tdefectRate,\n\t\tedgeLoss,\n\t\tscribeHoriz,\n\t\tscribeVert\n\t} = inputVals;\n\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth } = DiscSizes[selectedSize];\n\n\tlet positions = rectanglesInCircle(waferWidth, dieWidth + scribeHoriz * 2, dieHeight + scribeVert * 2);\n\tlet totalDies = positions.length;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst x = positions[i].x;\n\t\tconst y = positions[i].y;\n\n\t\tconst dieState = dieStates[i];\n\n\t\tconst corners = [\n\t\t\t{ x: x, y: y },\n\t\t\t{ x: x + dieWidth, y: y },\n\t\t\t{ x: x, y: y + dieHeight },\n\t\t\t{ x: x + dieWidth, y: y + dieHeight }\n\t\t];\n\n\t\tlet lossCircleRadius = waferWidth - edgeLoss;\n\n\t\tif (!corners.every(corner => isInsideCircle(corner.x, corner.y, waferWidth / 2, waferWidth / 2, lossCircleRadius))) {\n\t\t\tdieStates[i] = \"partial\";\n\t\t}\n\n\t\tdies[i] = {\n\t\t\tkey: i,\n\t\t\tdieState,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth: dieWidth,\n\t\t\theight: dieHeight,\n\t\t};\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth\n\t};\n}\n","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst domNode = document.getElementById('die-yield-calculator');\n\tReactDOM.render(<App />, domNode);\n});\n"],"names":["React","useState","useEffect","Checkbox","NumberInput","useInputs","PanelSizes","DiscSizes","YieldModels","ShapeSelector","props","createElement","className","value","shape","onChange","e","setShape","target","DiscSizeSelect","sizeInfo","selectedSize","handleSizeChange","Object","entries","map","key","name","waferWidth","PanelSizeSelect","waferHeight","ModelSelector","selectedModel","handleModelChange","Calculations","results","totalDies","goodDies","fabYield","DiscCanvas","width","height","style","border","cx","cy","r","Math","min","stroke","strokeWidth","fill","Fragment","dies","die","Die","PanelCanvas","stateColors","good","defective","partial","lost","x","y","dieState","App","dieWidth","setDieWidth","dieHeight","setDieHeight","aspectRatio","setAspectRatio","maintainAspectRatio","setMaintainAspectRatio","criticalArea","setCriticalArea","defectRate","setDefectRate","edgeLoss","setEdgeLoss","allCritical","setAllCritical","recticleLimit","setRecticleLimit","scribeHoriz","setScribeHoriz","scribeVert","setScribeVert","transHoriz","setTransHoriz","transVert","setTransVert","waferShape","setWaferShape","panelSize","setPanelSize","discSize","setDiscSize","setSelectedModel","parseFloat","dieWidthNum","dieHeightNum","isNaN","nullOrRound","setter","valFloat","roundedValue","round","toString","handleBlur","prevValue","handleDimensionChange","dimension","valNum","handleScribeSizeChange","handleCriticalAreaChange","handleDefectRateChange","handleEdgeLossChange","handleTransChange","handleMaintainAspectRatio","event","checked","handleAllCriticalChange","handleRecticleLimitChange","numberInputs","label","onBlur","isDisabled","checkboxes","input","type","disabled","step","s300mm","s305mm","s457mmsq","s457x600mm","s510mm","s600m","s51mm","s76mm","s100mm","s125mm","s150mm","s200mm","s450mm","poisson","murphy","rect","seeds","evaluateDiscInputs","evaluatePanelInputs","values","yieldModel","setResults","invalidValues","filter","length","isInsideCircle","centerX","centerY","radius","sqrt","rectanglesInCircle","diameter","rectWidth","rectHeight","positions","corners","every","corner","push","getFabYield","model","defects","exp","pow","inputVals","adjustedDieWidth","adjustedDieHeight","diesPerRow","floor","diesPerColumn","centerHorz","centerVert","countWidth","countHeight","dieStates","Array","i","j","random","row","col","lossCircleRadius","ReactDOM","jsx","_jsx","document","addEventListener","domNode","getElementById","render"],"sourceRoot":""}