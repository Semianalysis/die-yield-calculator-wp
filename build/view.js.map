{"version":3,"file":"view.js","mappings":";;;;;;;;;;;;;;;;AAAgG;AAEhG,MAAMG,UAAU,GAAG;EAClBC,MAAM,EAAE;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,WAAW,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAE;EACrEC,MAAM,EAAE;IAAEH,IAAI,EAAE,6BAA6B;IAAEC,WAAW,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAE;EAClFE,QAAQ,EAAE;IAAEJ,IAAI,EAAE,iBAAiB;IAAEC,WAAW,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAE;EACxEG,UAAU,EAAE;IAAEL,IAAI,EAAE,6BAA6B;IAAEC,WAAW,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAE;EACtFI,MAAM,EAAE;IAAEN,IAAI,EAAE,uBAAuB;IAAEC,WAAW,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAE;EAC5EK,KAAK,EAAE;IAAEP,IAAI,EAAE,gBAAgB;IAAEC,WAAW,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG;CAClE;AAED,MAAMM,UAAU,GAAG;EAClBC,KAAK,EAAE;IAAET,IAAI,EAAE,cAAc;IAAEE,UAAU,EAAE;EAAE,CAAE;EAC/CQ,KAAK,EAAE;IAAEV,IAAI,EAAE,cAAc;IAAEE,UAAU,EAAE;EAAE,CAAE;EAC/CS,MAAM,EAAE;IAAEX,IAAI,EAAE,eAAe;IAAEE,UAAU,EAAE;EAAG,CAAE;EAClDU,MAAM,EAAE;IAAEZ,IAAI,EAAE,eAAe;IAAEE,UAAU,EAAE;EAAG,CAAE;EAClDW,MAAM,EAAE;IAAEb,IAAI,EAAE,eAAe;IAAEE,UAAU,EAAE;EAAG,CAAE;EAClDY,MAAM,EAAE;IAAEd,IAAI,EAAE,eAAe;IAAEE,UAAU,EAAE;EAAG,CAAE;EAClDH,MAAM,EAAE;IAAEC,IAAI,EAAE,gBAAgB;IAAEE,UAAU,EAAE;EAAG,CAAE;EACnDa,MAAM,EAAE;IAAEf,IAAI,EAAE,gBAAgB;IAAEE,UAAU,EAAE;EAAG;CACjD;AAID,MAAMc,WAAW,GAAG;EACnBC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAE,MAAM;EACjBC,OAAO,EAAE,QAAQ;EACjBC,IAAI,EAAE;CACN;AAED,MAAMC,WAAW,GAAG;EACnBC,OAAO,EAAE;IAAEtB,IAAI,EAAE;EAAe,CAAE;EAClCuB,KAAK,EAAE;IAAEvB,IAAI,EAAE;EAAgB,CAAE;EACjCwB,IAAI,EAAE;IAAExB,IAAI,EAAE;EAAmB,CAAE;EACnC;EACAyB,KAAK,EAAE;IAAEzB,IAAI,EAAE;EAAa;CAC5B;AAsBD,MAAM0B,WAAW,GAAIC,KAMpB,IACAhC,0DAAA;EAAKkC,SAAS,EAAC;AAAa,GAC3BlC,0DAAA,gBACEgC,KAAK,CAACG,KAAK,OACZnC,0DAAA;EACCoC,IAAI,EAAC,QAAQ;EACbC,QAAQ,EAAEL,KAAK,CAACM,UAAU;EAC1BC,KAAK,EAAEP,KAAK,CAACO,KAAK;EAClBC,QAAQ,EAAER,KAAK,CAACQ,QAAQ;EACxBC,MAAM,EAAET,KAAK,CAACS,MAAM;EACpBC,IAAI,EAAC;AAAM,EAAG,CACR,CAET;AAED,MAAMC,QAAQ,GAAIX,KAIjB,IACAhC,0DAAA;EAAOkC,SAAS,EAAC;AAAU,GACzBF,KAAK,CAACG,KAAK,EACZnC,0DAAA;EAAOoC,IAAI,EAAC,UAAU;EAACI,QAAQ,EAAER,KAAK,CAACQ,QAAQ;EAAEI,OAAO,EAAEZ,KAAK,CAACY;AAAO,EAAI,CAE5E;AAED,MAAMC,aAAa,GAAIb,KAAyD,IAC/EhC,0DAAA;EAAKkC,SAAS,EAAC;AAAa,GAC3BlC,0DAAA,0BAECA,0DAAA;EAAQuC,KAAK,EAAEP,KAAK,CAACc,KAAK;EAAEN,QAAQ,EAAGO,CAAC,IAAKf,KAAK,CAACgB,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACV,KAAc;AAAC,GACnFvC,0DAAA;EAAQuC,KAAK,EAAC;AAAO,WAAe,EACpCvC,0DAAA;EAAQuC,KAAK,EAAC;AAAO,WAAe,CAC5B,CACF,CAET;AAED,MAAMW,eAAe,GAAIlB,KAGxB,IAAI;EACJ,MAAMmB,QAAQ,GAAGtC,UAAU,CAACmB,KAAK,CAACoB,YAAY,CAAC;EAE/C,OACCpD,0DAAA,cACCA,0DAAA;IAAQuC,KAAK,EAAEP,KAAK,CAACoB,YAAY;IAAEZ,QAAQ,EAAER,KAAK,CAACqB;EAAgB,GACjEC,MAAM,CAACC,OAAO,CAAC1C,UAAU,CAAC,CAAC2C,GAAG,CAAC,CAAC,CAACC,GAAG,EAAElB,KAAK,CAAC,KAC5CvC,0DAAA;IAAQyD,GAAG,EAAEA,GAAG;IAAElB,KAAK,EAAEkB;EAAG,GAC1BlB,KAAK,CAAClC,IAAI,CAEZ,CAAC,CACM,EACTL,0DAAA,yBAAamD,QAAQ,CAAC5C,UAAU,QAC1B,CACD;AAER,CAAC;AAED,MAAMmD,eAAe,GAAI1B,KAGxB,IAAI;EACJ,MAAMmB,QAAQ,GAAGhD,UAAU,CAAC6B,KAAK,CAACoB,YAAY,CAAC;EAE/C,OACCpD,0DAAA,cACCA,0DAAA;IAAQuC,KAAK,EAAEP,KAAK,CAACoB,YAAY;IAAEZ,QAAQ,EAAER,KAAK,CAACqB;EAAgB,GACjEC,MAAM,CAACC,OAAO,CAACpD,UAAU,CAAC,CAACqD,GAAG,CAAC,CAAC,CAACC,GAAG,EAAElB,KAAK,CAAC,KAC5CvC,0DAAA;IAAQyD,GAAG,EAAEA,GAAG;IAAElB,KAAK,EAAEkB;EAAG,GAC1BlB,KAAK,CAAClC,IAAI,CAEZ,CAAC,CACM,EACTL,0DAAA,yBAAamD,QAAQ,CAAC5C,UAAU,mBAAe4C,QAAQ,CAAC7C,WAAW,QAC7D,CACD;AAER,CAAC;AAED,MAAMqD,aAAa,GAAI3B,KAGtB,IACAhC,0DAAA,cACCA,0DAAA;EAAQuC,KAAK,EAAEP,KAAK,CAAC4B,aAAa;EAAEpB,QAAQ,EAAER,KAAK,CAAC6B;AAAiB,GACnEP,MAAM,CAACC,OAAO,CAAC7B,WAAW,CAAC,CAAC8B,GAAG,CAAC,CAAC,CAACC,GAAG,EAAElB,KAAK,CAAC,KAC7CvC,0DAAA;EAAQyD,GAAG,EAAEA,GAAG;EAAElB,KAAK,EAAEkB;AAAG,GAC1BlB,KAAK,CAAClC,IAAI,CAEZ,CAAC,CACM,EAETL,0DAAA,yBACS0B,WAAW,CAACM,KAAK,CAAC4B,aAAa,CAAC,CAACvD,IAAI,CACxC,CAEP;AAED,MAAMyD,YAAY,GAAI9B,KAErB,IACAhC,0DAAA;EAAKkC,SAAS,EAAC;AAAc,kBAChBF,KAAK,CAAC+B,SAAS,CAACC,SAAS,qBAAiBhC,KAAK,CAAC+B,SAAS,CAACE,QAAQ,mBACtEjC,KAAK,CAAC+B,SAAS,CAACG,QAAQ,CAEjC;AAED,SAASC,cAAcA,CAACC,CAAS,EAAEC,CAAS,EAAEC,OAAe,EAAEC,OAAe,EAAEC,MAAc;EAC7F,OAAOC,IAAI,CAACC,IAAI,CAAC,CAACN,CAAC,GAAGE,OAAO,KAAK,CAAC,GAAG,CAACD,CAAC,GAAGE,OAAO,KAAK,CAAC,CAAC,IAAIC,MAAM;AACpE;AAEA,SAASG,kBAAkBA,CAACC,QAAgB,EAAEC,SAAiB,EAAEC,UAAkB;EAClF,MAAMN,MAAM,GAAGI,QAAQ,GAAG,CAAC;EAC3B,MAAMN,OAAO,GAAGE,MAAM;EACtB,MAAMD,OAAO,GAAGC,MAAM;EACtB,IAAIO,SAAS,GAAG,EAAE;EAElB,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIQ,QAAQ,GAAGC,SAAS,EAAET,CAAC,IAAIS,SAAS,EAAE;IAC1D,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIO,QAAQ,GAAGE,UAAU,EAAET,CAAC,IAAIS,UAAU,EAAE;MAC5D,MAAME,OAAO,GAAG,CACf;QAAEZ,CAAC,EAAEA,CAAC;QAAEC,CAAC,EAAEA;MAAC,CAAE,EACd;QAAED,CAAC,EAAEA,CAAC,GAAGS,SAAS;QAAER,CAAC,EAAEA;MAAC,CAAE,EAC1B;QAAED,CAAC,EAAEA,CAAC;QAAEC,CAAC,EAAEA,CAAC,GAAGS;MAAU,CAAE,EAC3B;QAAEV,CAAC,EAAEA,CAAC,GAAGS,SAAS;QAAER,CAAC,EAAEA,CAAC,GAAGS;MAAU,CAAE,CACvC;MAED,IAAIE,OAAO,CAACC,KAAK,CAACC,MAAM,IAAIf,cAAc,CAACe,MAAM,CAACd,CAAC,EAAEc,MAAM,CAACb,CAAC,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,CAAC,CAAC,EAAE;QAC1FO,SAAS,CAACI,IAAI,CAAC;UAAEf,CAAC,EAAEA,CAAC;UAAEC,CAAC,EAAEA;QAAC,CAAE,CAAC;MAC/B;IACD;EACD;EACA,OAAOU,SAAS;AACjB;AAGA,SAASK,WAAWA,CAACC,UAAkB,EAAEC,YAAoB,EAAEC,KAA+B;EAC7F,MAAMC,OAAO,GAAGF,YAAY,GAAGD,UAAU,GAAG,GAAG;EAC/C,QAAQE,KAAK;IACZ,KAAM,SAAS;MACd,OAAOd,IAAI,CAACgB,GAAG,CAAC,CAACD,OAAO,CAAC;IAC1B,KAAM,OAAO;MACZ,OAAOf,IAAI,CAACiB,GAAG,CAAE,CAAC,CAAC,GAAGjB,IAAI,CAACgB,GAAG,CAAC,CAACD,OAAO,CAAC,IAAIA,OAAO,EAAG,CAAC,CAAC;IACzD,KAAM,MAAM;MACX,OAAO,CAAC,CAAC,GAAGf,IAAI,CAACgB,GAAG,CAAC,CAAC,CAAC,GAAGD,OAAO,CAAC,KAAK,CAAC,GAAGA,OAAO,CAAC;IACpD;IACA;IACA,KAAM,OAAO;MACZ,OAAO,CAAC,IAAI,CAAC,GAAGA,OAAO,CAAC;IACzB;MACCG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,OAAO,CAAC;EACV;AACD;AAEA,SAASC,mBAAmBA,CAC3BC,QAAgB,EAChBC,SAAiB,EACjBT,YAAoB,EACpBD,UAAkB,EAClBW,QAAgB,EAChBC,WAAmB,EACnBC,UAAkB,EAClB9C,YAAqC,EACrCQ,aAAuC;EAEvC,IAAIuC,IAAI,GAAG,EAAE;EACb,MAAMjC,QAAQ,GAAGkB,WAAW,CAACC,UAAU,EAAEC,YAAY,EAAE1B,aAAa,CAAC;EACrE,MAAM;IAAErD,UAAU;IAAED;EAAW,CAAE,GAAGH,UAAU,CAACiD,YAAY,CAAC;EAC5D,MAAMgD,gBAAgB,GAAGN,QAAQ,GAAGG,WAAW,GAAG,CAAC;EACnD,MAAMI,iBAAiB,GAAGN,SAAS,GAAGG,UAAU,GAAG,CAAC;EAEpD,MAAMI,UAAU,GAAG7B,IAAI,CAAC8B,KAAK,CAAChG,UAAU,GAAG6F,gBAAgB,CAAC;EAC5D,MAAMI,aAAa,GAAG/B,IAAI,CAAC8B,KAAK,CAACjG,WAAW,GAAG+F,iBAAiB,CAAC;EAEjE,MAAMI,UAAU,GAAG,CAAClG,UAAU,GAAG6F,gBAAgB,GAAGE,UAAU,IAAI,CAAC;EACnE,MAAMI,UAAU,GAAG,CAACpG,WAAW,GAAG+F,iBAAiB,GAAGG,aAAa,IAAI,CAAC;EAExE,MAAMG,UAAU,GAAGlC,IAAI,CAAC8B,KAAK,CAAChG,UAAU,IAAIuF,QAAQ,GAAGG,WAAW,GAAG,CAAC,CAAC,CAAC;EACxE,MAAMW,WAAW,GAAGnC,IAAI,CAAC8B,KAAK,CAACjG,WAAW,IAAIyF,SAAS,GAAGG,UAAU,GAAG,CAAC,CAAC,CAAC;EAE1E,MAAMlC,SAAS,GAAG2C,UAAU,GAAGC,WAAW;EAE1C,MAAM3C,QAAQ,GAAGQ,IAAI,CAAC8B,KAAK,CAACrC,QAAQ,GAAGF,SAAS,CAAC;EAEjD,IAAI6C,SAAS,GAAG,IAAIC,KAAK,CAAC9C,SAAS,CAAC,CAAC+C,IAAI,CAAC,WAAW,CAAC;EACtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/C,QAAQ,EAAE+C,CAAC,EAAE,EAAE;IAClCH,SAAS,CAACG,CAAC,CAAC,GAAG,MAAM;EACtB;EAEA,KAAK,IAAIA,CAAC,GAAGH,SAAS,CAACI,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC9C,MAAME,CAAC,GAAGzC,IAAI,CAAC8B,KAAK,CAAC9B,IAAI,CAAC0C,MAAM,EAAE,IAAIH,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACH,SAAS,CAACG,CAAC,CAAC,EAAEH,SAAS,CAACK,CAAC,CAAC,CAAC,GAAG,CAACL,SAAS,CAACK,CAAC,CAAC,EAAEL,SAAS,CAACG,CAAC,CAAC,CAAC;EAC5D;EAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,MAAMI,GAAG,GAAG3C,IAAI,CAAC8B,KAAK,CAACS,CAAC,GAAGV,UAAU,CAAC;IACtC,MAAMe,GAAG,GAAGL,CAAC,GAAGV,UAAU;IAE1B,MAAMgB,QAAQ,GAAGT,SAAS,CAACG,CAAC,CAAC;IAE7B,MAAM5C,CAAC,GAAGiD,GAAG,GAAGjB,gBAAgB,GAAGK,UAAU;IAC7C,MAAMpC,CAAC,GAAG+C,GAAG,GAAGf,iBAAiB,GAAGK,UAAU;IAC9C,MAAMa,KAAK,GAAGzB,QAAQ;IACtB,MAAM0B,MAAM,GAAGzB,SAAS;IAExBI,IAAI,CAACa,CAAC,CAAC,GAAG;MAAE,KAAK,EAAEA,CAAC;MAAE,UAAU,EAAEM,QAAQ;MAAE,GAAG,EAAElD,CAAC;MAAE,GAAG,EAAEC,CAAC;MAAE,OAAO,EAAEkD,KAAK;MAAE,QAAQ,EAAEC;IAAM,CAAE;EAC/F;EAEA,OAAO;IACNrB,IAAI;IACJnC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACR3D,UAAU;IACVD;GACA;AACF;AAEA,SAASmH,mBAAmBA,CAC3B3B,QAAgB,EAChBC,SAAiB,EACjBT,YAAoB,EACpBD,UAAkB,EAClBW,QAAgB,EAChBC,WAAmB,EACnBC,UAAkB,EAClB9C,YAAqC,EACrCQ,aAAuC;EAEvC,IAAIuC,IAAI,GAAG,EAAE;EACb,MAAMjC,QAAQ,GAAGkB,WAAW,CAACC,UAAU,EAAEC,YAAY,EAAE1B,aAAa,CAAC;EACrE,MAAM;IAAErD;EAAU,CAAE,GAAGM,UAAU,CAACuC,YAAY,CAAC;EAE/C,IAAI2B,SAAS,GAAGJ,kBAAkB,CAACpE,UAAU,EAAEuF,QAAQ,GAAGG,WAAW,GAAG,CAAC,EAAEF,SAAS,GAAGG,UAAU,GAAG,CAAC,CAAC;EACtG,IAAIlC,SAAS,GAAGe,SAAS,CAACkC,MAAM;EAEhC,MAAMhD,QAAQ,GAAGQ,IAAI,CAAC8B,KAAK,CAACrC,QAAQ,GAAGF,SAAS,CAAC;EAEjD,IAAI6C,SAAS,GAAG,IAAIC,KAAK,CAAC9C,SAAS,CAAC,CAAC+C,IAAI,CAAC,WAAW,CAAC;EACtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/C,QAAQ,EAAE+C,CAAC,EAAE,EAAE;IAClCH,SAAS,CAACG,CAAC,CAAC,GAAG,MAAM;EACtB;EAEA,KAAK,IAAIA,CAAC,GAAGH,SAAS,CAACI,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC9C,MAAME,CAAC,GAAGzC,IAAI,CAAC8B,KAAK,CAAC9B,IAAI,CAAC0C,MAAM,EAAE,IAAIH,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACH,SAAS,CAACG,CAAC,CAAC,EAAEH,SAAS,CAACK,CAAC,CAAC,CAAC,GAAG,CAACL,SAAS,CAACK,CAAC,CAAC,EAAEL,SAAS,CAACG,CAAC,CAAC,CAAC;EAC5D;EAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,MAAM5C,CAAC,GAAGW,SAAS,CAACiC,CAAC,CAAC,CAAC5C,CAAC;IACxB,MAAMC,CAAC,GAAGU,SAAS,CAACiC,CAAC,CAAC,CAAC3C,CAAC;IAExB,MAAMiD,QAAQ,GAAGT,SAAS,CAACG,CAAC,CAAC;IAC7B,MAAMO,KAAK,GAAGzB,QAAQ;IACtB,MAAM0B,MAAM,GAAGzB,SAAS;IAExB,MAAMf,OAAO,GAAG,CACf;MAAEZ,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA;IAAC,CAAE,EACd;MAAED,CAAC,EAAEA,CAAC,GAAG0B,QAAQ;MAAEzB,CAAC,EAAEA;IAAC,CAAE,EACzB;MAAED,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA,CAAC,GAAG0B;IAAS,CAAE,EAC1B;MAAE3B,CAAC,EAAEA,CAAC,GAAG0B,QAAQ;MAAEzB,CAAC,EAAEA,CAAC,GAAG0B;IAAS,CAAE,CACrC;IAED,IAAI2B,gBAAgB,GAAGnH,UAAU,GAAGyF,QAAQ;IAE5C,IAAI,CAAChB,OAAO,CAACC,KAAK,CAACC,MAAM,IAAIf,cAAc,CAACe,MAAM,CAACd,CAAC,EAAEc,MAAM,CAACb,CAAC,EAAE9D,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,CAAC,EAAEmH,gBAAgB,CAAC,CAAC,EAAE;MACnHb,SAAS,CAACG,CAAC,CAAC,GAAG,SAAS;IAEzB;IAEAb,IAAI,CAACa,CAAC,CAAC,GAAG;MAAE,KAAK,EAAEA,CAAC;MAAE,UAAU,EAAEM,QAAQ;MAAE,GAAG,EAAElD,CAAC;MAAE,GAAG,EAAEC,CAAC;MAAE,OAAO,EAAEkD,KAAK;MAAE,QAAQ,EAAEC;IAAM,CAAE;EAC/F;EAEA,OAAO;IACNrB,IAAI;IACJnC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACR3D;GACA;AACF;AAEA,MAAMoH,KAAK,GAAI3F,KAA+B,IAAI;EACjD,OACChC,0DAAA;IAAKuH,KAAK,EAAEvF,KAAK,CAAC+B,SAAS,CAACxD,UAAU;IAAEiH,MAAM,EAAExF,KAAK,CAAC+B,SAAS,CAACxD,UAAU;IAAEqH,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAiB;EAAE,GAC/G7H,0DAAA;IACC8H,EAAE,EAAE9F,KAAK,CAAC+B,SAAS,CAACxD,UAAU,GAAG,CAAC;IAClCwH,EAAE,EAAE/F,KAAK,CAAC+B,SAAS,CAACxD,UAAU,GAAG,CAAC;IAClCyH,CAAC,EAAEvD,IAAI,CAACwD,GAAG,CAACjG,KAAK,CAAC+B,SAAS,CAACxD,UAAU,EAAEyB,KAAK,CAAC+B,SAAS,CAACxD,UAAU,CAAC,GAAG,CAAC;IACvE2H,MAAM,EAAC,OAAO;IACdC,WAAW,EAAC,GAAG;IACfpB,IAAI,EAAC;EAAM,EAAG,EACf/G,0DAAA,CAAAA,uDAAA,QAEEgC,KAAK,CAAC+B,SAAS,CAACoC,IAAI,CAAC3C,GAAG,CAAE6E,GAAG,IAAMrI,0DAAA,CAACsI,GAAG;IACtC7E,GAAG,EAAE4E,GAAG,CAAC5E,GAAG;IACZ8E,KAAK,EAAElH,WAAW,CAACgH,GAAG,CAACf,QAAQ,CAAC;IAChClD,CAAC,EAAEiE,GAAG,CAACjE,CAAC;IACRC,CAAC,EAAEgE,GAAG,CAAChE,CAAC;IACRkD,KAAK,EAAEc,GAAG,CAACd,KAAK;IAChBC,MAAM,EAAEa,GAAG,CAACb;EAAM,EAChB,CAAC,CAEH,CACE;AAER,CAAC;AAED,MAAMgB,KAAK,GAAIxG,KAA+B,IAAI;EACjD,OACChC,0DAAA;IAAKuH,KAAK,EAAEvF,KAAK,CAAC+B,SAAS,CAACxD,UAAU;IAAEiH,MAAM,EAAExF,KAAK,CAAC+B,SAAS,CAACzD,WAAW;IAAEsH,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAiB;EAAE,GAE/G7F,KAAK,CAAC+B,SAAS,CAACoC,IAAI,CAAC3C,GAAG,CAAE6E,GAAG,IAC5BrI,0DAAA,CAACsI,GAAG;IACH7E,GAAG,EAAE4E,GAAG,CAAC5E,GAAG;IACZ8E,KAAK,EAAElH,WAAW,CAACgH,GAAG,CAACf,QAAQ,CAAC;IAChClD,CAAC,EAAEiE,GAAG,CAACjE,CAAC;IACRC,CAAC,EAAEgE,GAAG,CAAChE,CAAC;IACRkD,KAAK,EAAEc,GAAG,CAACd,KAAK;IAChBC,MAAM,EAAEa,GAAG,CAACb;EAAM,EAEnB,CAAC,CAEE;AAER,CAAC;AAGD,MAAMc,GAAG,GAAItG,KAA6E,IACzFhC,0DAAA;EAAMoE,CAAC,EAAEpC,KAAK,CAACoC,CAAC;EAAEC,CAAC,EAAErC,KAAK,CAACqC,CAAC;EAAEkD,KAAK,EAAEvF,KAAK,CAACuF,KAAK;EAAEC,MAAM,EAAExF,KAAK,CAACwF,MAAM;EAAET,IAAI,EAAE/E,KAAK,CAACuG;AAAK,EACzF;AAED,SAASE,GAAGA,CAAA;EACX,MAAM,CAAC1E,SAAS,EAAE2E,YAAY,CAAC,GAAGzI,+CAAQ,CAAY;IACrD,MAAM,EAAE,EAAE;IACV,WAAW,EAAE,CAAC;IACd,UAAU,EAAE,CAAC;IACb,UAAU,EAAE,CAAC;IACb,YAAY,EAAE,CAAC;IACf,aAAa,EAAE;GACf,CAAC;EACF,MAAM,CAAC6F,QAAQ,EAAE6C,WAAW,CAAC,GAAG1I,+CAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC8F,SAAS,EAAE6C,YAAY,CAAC,GAAG3I,+CAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC4I,WAAW,EAAEC,cAAc,CAAC,GAAG7I,+CAAQ,CAAC6F,QAAQ,GAAGC,SAAS,CAAC;EACpE,MAAM,CAACgD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/I,+CAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACqF,YAAY,EAAE2D,eAAe,CAAC,GAAGhJ,+CAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoF,UAAU,EAAE6D,aAAa,CAAC,GAAGjJ,+CAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAAC+F,QAAQ,EAAEmD,WAAW,CAAC,GAAGlJ,+CAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACmJ,WAAW,EAAEC,cAAc,CAAC,GAAGpJ,+CAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqJ,aAAa,EAAEC,gBAAgB,CAAC,GAAGtJ,+CAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgG,WAAW,EAAEuD,cAAc,CAAC,GAAGvJ,+CAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACiG,UAAU,EAAEuD,aAAa,CAAC,GAAGxJ,+CAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACyJ,UAAU,EAAEC,aAAa,CAAC,GAAG1J,+CAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC2J,SAAS,EAAEC,YAAY,CAAC,GAAG5J,+CAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAAC6C,KAAK,EAAEE,QAAQ,CAAC,GAAG/C,+CAAQ,CAAQ,OAAO,CAAC;EAClD,MAAM,CAAC6J,SAAS,EAAEC,YAAY,CAAC,GAAG9J,+CAAQ,CAA0B,QAAQ,CAAC;EAC7E,MAAM,CAAC+J,SAAS,EAAEC,YAAY,CAAC,GAAGhK,+CAAQ,CAA0B,QAAQ,CAAC;EAC7E,MAAM,CAAC2D,aAAa,EAAEsG,gBAAgB,CAAC,GAAGjK,+CAAQ,CAA2B,OAAO,CAAC;EAErFC,gDAAS,CAAC,MAAK;IACd,IAAI6I,mBAAmB,EAAE;MACxBD,cAAc,CAAChD,QAAQ,GAAGC,SAAS,CAAC;IACrC;EACD,CAAC,EAAE,CAACD,QAAQ,EAAEC,SAAS,EAAEgD,mBAAmB,CAAC,CAAC;EAE9C7I,gDAAS,CAAC,MAAK;IACd,IAAI4C,KAAK,KAAK,OAAO,EAAE;MACtB4F,YAAY,CAACjB,mBAAmB,CAAC3B,QAAQ,EAAEC,SAAS,EAAET,YAAY,EAAED,UAAU,EAAEW,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAE8D,SAAS,EAAEpG,aAAa,CAAC,CAAC;IAC9I,CAAC,MAAM,IAAId,KAAK,KAAK,OAAO,EAAE;MAC7B4F,YAAY,CAAC7C,mBAAmB,CAACC,QAAQ,EAAEC,SAAS,EAAET,YAAY,EAAED,UAAU,EAAEW,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAE4D,SAAS,EAAElG,aAAa,CAAC,CAAC;IAC9I;EACD,CAAC,EAAE,CAACkC,QAAQ,EAAEC,SAAS,EAAET,YAAY,EAAED,UAAU,EAAEW,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEpD,KAAK,EAAEgH,SAAS,EAAEE,SAAS,EAAEpG,aAAa,CAAC,CAAC;EAElI,MAAMuG,WAAW,GAAGA,CAACC,MAA6B,EAAE7H,KAAa,KAAI;IACpE,MAAM8H,YAAY,GAAG5F,IAAI,CAAC6F,KAAK,CAAC/H,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;IAClD6H,MAAM,CAACC,YAAY,CAAC;EACrB,CAAC;EAED,MAAME,UAAU,GAAIH,MAAwC,IAAK,MAAK;IACrEA,MAAM,CAAEI,SAAS,IAAMA,SAAU,CAAC;EACnC,CAAC;EAED,MAAMC,qBAAqB,GAAIC,SAAmC,IAAMnI,KAAa,IAAI;IACxF,IAAI,CAAC+G,aAAa,IAAMoB,SAAS,KAAK,UAAU,IAAInI,KAAK,IAAI,EAAE,IAAMmI,SAAS,KAAK,WAAW,IAAInI,KAAK,IAAI,EAAI,EAAE;MAChH,IAAIwG,mBAAmB,EAAE;QACxB,IAAI2B,SAAS,KAAK,UAAU,EAAE;UAC7BP,WAAW,CAACxB,WAAW,EAAEpG,KAAK,CAAC;UAC/B4H,WAAW,CAACvB,YAAY,EAAErG,KAAK,GAAGsG,WAAW,CAAC;QAC/C,CAAC,MAAM,IAAI6B,SAAS,KAAK,WAAW,EAAE;UACrCP,WAAW,CAACvB,YAAY,EAAErG,KAAK,CAAC;UAChC4H,WAAW,CAACxB,WAAW,EAAEpG,KAAK,GAAGsG,WAAW,CAAC;QAC9C;MACD,CAAC,MAAM;QACN6B,SAAS,KAAK,UAAU,GAAG/B,WAAW,CAACpG,KAAK,CAAC,GAAGqG,YAAY,CAACrG,KAAK,CAAC;MACpE;IACD;EACD,CAAC;EAED,MAAMoI,sBAAsB,GAAID,SAAiB,IAAMnI,KAAa,IAAI;IACvE,IAAImI,SAAS,KAAK,OAAO,EAAE;MAC1BP,WAAW,CAACX,cAAc,EAAEjH,KAAK,CAAC;IACnC,CAAC,MAAM,IAAImI,SAAS,KAAK,MAAM,EAAE;MAChCP,WAAW,CAACV,aAAa,EAAElH,KAAK,CAAC;IAClC;EACD,CAAC;EAED,MAAMqI,wBAAwB,GAAIrI,KAAa,IAAI;IAClD4H,WAAW,CAAClB,eAAe,EAAE1G,KAAK,CAAC;EACpC,CAAC;EAED,MAAMsI,sBAAsB,GAAItI,KAAa,IAAI;IAChDoD,OAAO,CAACC,GAAG,CAAC;MAAErD;IAAK,CAAE,CAAC;IACtB4H,WAAW,CAACjB,aAAa,EAAE3G,KAAK,CAAC;EAClC,CAAC;EAED,MAAMuI,oBAAoB,GAAIvI,KAAa,IAAI;IAC9C4H,WAAW,CAAChB,WAAW,EAAE5G,KAAK,CAAC;EAChC,CAAC;EAED,MAAMwI,iBAAiB,GAAIL,SAAiB,IAAMnI,KAAa,IAAI;IAClE,IAAImI,SAAS,KAAK,OAAO,EAAE;MAC1BP,WAAW,CAACR,aAAa,EAAEpH,KAAK,CAAC;IAClC,CAAC,MAAM,IAAImI,SAAS,KAAK,MAAM,EAAE;MAChCP,WAAW,CAACN,YAAY,EAAEtH,KAAK,CAAC;IACjC;EACD,CAAC;EAED,MAAMyI,yBAAyB,GAAIC,KAA0C,IAAI;IAChFjC,sBAAsB,CAACiC,KAAK,CAAChI,MAAM,CAACL,OAAO,CAAC;EAC7C,CAAC;EAED,MAAMsI,uBAAuB,GAAID,KAA0C,IAAI;IAC9EhC,eAAe,CAACnD,QAAQ,GAAGC,SAAS,CAAC;IACrCsD,cAAc,CAAC4B,KAAK,CAAChI,MAAM,CAACL,OAAO,CAAC;EACrC,CAAC;EAED,MAAMuI,yBAAyB,GAAIF,KAA0C,IAAI;IAChF1B,gBAAgB,CAAC0B,KAAK,CAAChI,MAAM,CAACL,OAAO,CAAC;EACvC,CAAC;EAED,MAAMS,gBAAgB,GAAI4H,KAA2C,IAAI;IACxE,IAAInI,KAAK,KAAK,OAAO,EAAE;MACtBiH,YAAY,CAACkB,KAAK,CAAChI,MAAM,CAACV,KAAgC,CAAC;IAC5D,CAAC,MAAM,IAAIO,KAAK,KAAK,OAAO,EAAE;MAC7BmH,YAAY,CAACgB,KAAK,CAAChI,MAAM,CAACV,KAAgC,CAAC;IAC5D;EACD,CAAC;EAED,MAAMsB,iBAAiB,GAAIoH,KAA2C,IAAI;IACzEf,gBAAgB,CAACe,KAAK,CAAChI,MAAM,CAACV,KAAiC,CAAC;EACjE,CAAC;EAED,MAAM6I,YAAY,GAAG,CACpB;IACCjJ,KAAK,EAAE,gBAAgB;IACvBI,KAAK,EAAEuD,QAAQ;IACftD,QAAQ,EAAEiI,qBAAqB,CAAC,UAAU,CAAC;IAC3ChI,MAAM,EAAE8H,UAAU,CAAC5B,WAAW,CAAC;IAC/BrG,UAAU,EAAE;GACZ,EACD;IACCH,KAAK,EAAE,iBAAiB;IACxBI,KAAK,EAAEwD,SAAS;IAChBvD,QAAQ,EAAEiI,qBAAqB,CAAC,WAAW,CAAC;IAC5ChI,MAAM,EAAE8H,UAAU,CAAC3B,YAAY,CAAC;IAChCtG,UAAU,EAAE;GACZ,EACD;IACCH,KAAK,EAAE,qBAAqB;IAC5BI,KAAK,EAAE+C,YAAY;IACnB9C,QAAQ,EAAEoI,wBAAwB;IAClCnI,MAAM,EAAE8H,UAAU,CAACtB,eAAe,CAAC;IACnC3G,UAAU,EAAE8G;GACZ,EACD;IACCjH,KAAK,EAAE,qBAAqB;IAC5BI,KAAK,EAAE8C,UAAU;IACjB7C,QAAQ,EAAEqI,sBAAsB;IAChCpI,MAAM,EAAE8H,UAAU,CAACrB,aAAa,CAAC;IACjC5G,UAAU,EAAE;GACZ,EACD;IACCH,KAAK,EAAE,gBAAgB;IACvBI,KAAK,EAAEyD,QAAQ;IACfxD,QAAQ,EAAEsI,oBAAoB;IAC9BrI,MAAM,EAAE8H,UAAU,CAACpB,WAAW,CAAC;IAC/B7G,UAAU,EAAE;GACZ,EACD;IACCH,KAAK,EAAE,oBAAoB;IAC3BI,KAAK,EAAE0D,WAAW;IAClBzD,QAAQ,EAAEmI,sBAAsB,CAAC,OAAO,CAAC;IACzClI,MAAM,EAAE8H,UAAU,CAACf,cAAc,CAAC;IAClClH,UAAU,EAAE;GACZ,EACD;IACCH,KAAK,EAAE,mBAAmB;IAC1BI,KAAK,EAAE2D,UAAU;IACjB1D,QAAQ,EAAEmI,sBAAsB,CAAC,MAAM,CAAC;IACxClI,MAAM,EAAE8H,UAAU,CAACd,aAAa,CAAC;IACjCnH,UAAU,EAAE;GACZ,EACD;IACCH,KAAK,EAAE,mBAAmB;IAC1BI,KAAK,EAAEmH,UAAU;IACjBlH,QAAQ,EAAEuI,iBAAiB,CAAC,OAAO,CAAC;IACpCtI,MAAM,EAAE8H,UAAU,CAACZ,aAAa,CAAC;IACjCrH,UAAU,EAAE;GACZ,EACD;IACCH,KAAK,EAAE,kBAAkB;IACzBI,KAAK,EAAEqH,SAAS;IAChBpH,QAAQ,EAAEuI,iBAAiB,CAAC,MAAM,CAAC;IACnCtI,MAAM,EAAE8H,UAAU,CAACV,YAAY,CAAC;IAChCvH,UAAU,EAAE;GACZ,CACD;EAED,MAAM+I,UAAU,GAAG,CAClB;IAAElJ,KAAK,EAAE,uBAAuB;IAAEK,QAAQ,EAAEwI,yBAAyB;IAAEpI,OAAO,EAAEmG;EAAmB,CAAE,EACrG;IAAE5G,KAAK,EAAE,gBAAgB;IAAEK,QAAQ,EAAE2I,yBAAyB;IAAEvI,OAAO,EAAE0G;EAAa,CAAE,EACxF;IAAEnH,KAAK,EAAE,cAAc;IAAEK,QAAQ,EAAE0I,uBAAuB;IAAEtI,OAAO,EAAEwG;EAAW,CAAE,EAClF;IACCjH,KAAK,EAAE,WAAW;IAAEK,QAAQ,EAAEA,CAAA,KAAK,CACnC,CAAC;IAAEI,OAAO,EAAE;GACZ,CACD;EAED,OACC5C,0DAAA;IAAKkC,SAAS,EAAC;EAAM,GACpBlC,0DAAA;IAAKkC,SAAS,EAAC;EAAe,GAC5BkJ,YAAY,CAAC5H,GAAG,CAAC8H,KAAK,IACtBtL,0DAAA,CAAC+B,WAAW;IACX0B,GAAG,EAAE6H,KAAK,CAACnJ,KAAK;IAChBA,KAAK,EAAEmJ,KAAK,CAACnJ,KAAK;IAClBI,KAAK,EAAE+I,KAAK,CAAC/I,KAAK;IAClBD,UAAU,EAAEgJ,KAAK,CAAChJ,UAAU;IAC5BE,QAAQ,EAAGyI,KAAK,IAAI;MACnBK,KAAK,CAAC9I,QAAQ,CAAC+I,UAAU,CAACN,KAAK,CAAChI,MAAM,CAACV,KAAK,CAAC,CAAC;IAC/C;EAAC,EAEF,CAAC,EACD8I,UAAU,CAAC7H,GAAG,CAAC8H,KAAK,IACpBtL,0DAAA,CAAC2C,QAAQ;IACRc,GAAG,EAAE6H,KAAK,CAACnJ,KAAK;IAChBA,KAAK,EAAEmJ,KAAK,CAACnJ,KAAK;IAClBK,QAAQ,EAAE8I,KAAK,CAAC9I,QAAQ;IACxBI,OAAO,EAAE0I,KAAK,CAAC1I;EAAO,EAEvB,CAAC,EACF5C,0DAAA,CAAC6C,aAAa;IACbC,KAAK,EAAEA,KAAK;IACZE,QAAQ,EAAEA;EAAQ,EACjB,EAEDF,KAAK,KAAK,OAAO,IACjB9C,0DAAA,CAAC0D,eAAe;IACfN,YAAY,EAAE0G,SAAS;IACvBzG,gBAAgB,EAAEA;EAAgB,EACjC,EAGFP,KAAK,KAAK,OAAO,IACjB9C,0DAAA,CAACkD,eAAe;IACfE,YAAY,EAAE4G,SAAS;IACvB3G,gBAAgB,EAAEA;EAAgB,EACjC,EAEHrD,0DAAA,CAAC2D,aAAa;IACbC,aAAa,EAAEA,aAAa;IAC5BC,iBAAiB,EAAEA;EAAiB,EACnC,CACG,EACN7D,0DAAA;IAAKkC,SAAS,EAAC;EAAc,GAC5BlC,0DAAA,CAAC8D,YAAY;IACZC,SAAS,EAAEA;EAAS,EAAI,CACpB,EACN/D,0DAAA,cACE8C,KAAK,KAAK,OAAO,GACjB9C,0DAAA,CAACwI,KAAK;IAACzE,SAAS,EAAEA;EAAS,EAAI,GAC5BjB,KAAK,KAAK,OAAO,GACpB9C,0DAAA,CAAC2H,KAAK;IAAC5D,SAAS,EAAEA;EAAS,EAAI,GAC5B,IAAI,CACH,CAED;AAER;AAEA,iEAAe0E,GAAG;;;;;;;;;;AC/oBlB;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNiC;AACE;AAAA;AAEnCkD,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACnD,MAAMC,OAAO,GAAGF,QAAQ,CAACG,cAAc,CAAC,sBAAsB,CAAC;EAC/DN,uDAAe,cAACE,sDAAA,CAACjD,uDAAG,IAAE,CAAC,EAAEoD,OAAO,CAAC;AAClC,CAAC,CAAC,C","sources":["webpack://die-yield-calculator-wp/./src/components/App.tsx","webpack://die-yield-calculator-wp/external window \"React\"","webpack://die-yield-calculator-wp/external window \"ReactDOM\"","webpack://die-yield-calculator-wp/external window \"ReactJSXRuntime\"","webpack://die-yield-calculator-wp/webpack/bootstrap","webpack://die-yield-calculator-wp/webpack/runtime/compat get default export","webpack://die-yield-calculator-wp/webpack/runtime/define property getters","webpack://die-yield-calculator-wp/webpack/runtime/hasOwnProperty shorthand","webpack://die-yield-calculator-wp/webpack/runtime/make namespace object","webpack://die-yield-calculator-wp/./src/view.js"],"sourcesContent":["import React, { useState, useEffect, Dispatch, SetStateAction, ReactEventHandler } from \"react\";\n\nconst PANELSIZES = {\n\ts300mm: { name: \"300 mm (12 in)\", waferHeight: 300, waferWidth: 300 },\n\ts305mm: { name: \"305 x 457 mm² (12 x 18 in²)\", waferHeight: 305, waferWidth: 457 },\n\ts457mmsq: { name: \"457 mm² (18 in)\", waferHeight: 457, waferWidth: 457 },\n\ts457x600mm: { name: \"457 x 600 mm² (18 x 24 in²)\", waferHeight: 457, waferWidth: 600 },\n\ts510mm: { name: \"510 x 515 mm² (21 in)\", waferHeight: 510, waferWidth: 515 },\n\ts600m: { name: \"600 mm (24 in)\", waferHeight: 600, waferWidth: 600 }\n};\n\nconst WAFERSIZES = {\n\ts51mm: { name: \"51 mm (2 in)\", waferWidth: 51 },\n\ts76mm: { name: \"76 mm (3 in)\", waferWidth: 76 },\n\ts100mm: { name: \"100 mm (4 in)\", waferWidth: 100 },\n\ts125mm: { name: \"125 mm (5 in)\", waferWidth: 125 },\n\ts150mm: { name: \"150 mm (6 in)\", waferWidth: 150 },\n\ts200mm: { name: \"200 mm (8 in)\", waferWidth: 200 },\n\ts300mm: { name: \"300 mm (12 in)\", waferWidth: 300 },\n\ts450mm: { name: \"450 mm (18 in)\", waferWidth: 450 }\n};\n\ntype SizeKey = keyof typeof PANELSIZES | keyof typeof WAFERSIZES;\n\nconst STATECOLORS = {\n\tgood: \"green\",\n\tdefective: \"grey\",\n\tpartial: \"yellow\",\n\tlost: \"red\"\n};\n\nconst YIELDMODELS = {\n\tpoisson: { name: \"Poisson Model\" },\n\tmurph: { name: \"Murphy's Model\" },\n\trect: { name: \"Rectangular Model\" },\n\t//moore: {name: \"Moore's Model\"},\n\tseeds: { name: \"Seeds Model\" }\n};\n\ntype Shape = \"Panel\" | \"Wafer\";\n\ntype Die = {\n\tx: number,\n\ty: number,\n\twidth: number,\n\theight: number,\n\tkey: number,\n\tdieState: keyof typeof STATECOLORS\n};\n\ntype CalcState = {\n\ttotalDies: number,\n\tgoodDies: number,\n\tfabYield: number,\n\twaferWidth: number,\n\twaferHeight?: number,\n\tdies: Array<Die>\n};\n\nconst NumberInput = (props: {\n\tlabel: string,\n\tvalue: number,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tisDisabled: boolean\n\tonBlur?: () => void,\n}) => (\n\t<div className=\"input-group\">\n\t\t<label>\n\t\t\t{props.label}:\n\t\t\t<input\n\t\t\t\ttype=\"number\"\n\t\t\t\tdisabled={props.isDisabled}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tonBlur={props.onBlur}\n\t\t\t\tstep=\"0.01\" />\n\t\t</label>\n\t</div>\n);\n\nconst Checkbox = (props: {\n\tlabel: string,\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tchecked: boolean\n}) => (\n\t<label className=\"checkbox\">\n\t\t{props.label}\n\t\t<input type=\"checkbox\" onChange={props.onChange} checked={props.checked} />\n\t</label>\n);\n\nconst ShapeSelector = (props: { shape: Shape, setShape: (value: Shape) => void }) => (\n\t<div className=\"input-group\">\n\t\t<label>\n\t\t\tShape:\n\t\t\t<select value={props.shape} onChange={(e) => props.setShape(e.target.value as Shape)}>\n\t\t\t\t<option value=\"Panel\">Panel</option>\n\t\t\t\t<option value=\"Wafer\">Wafer</option>\n\t\t\t</select>\n\t\t</label>\n\t</div>\n);\n\nconst WaferSizeSelect = (props: {\n\tselectedSize: keyof typeof WAFERSIZES,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\tconst sizeInfo = WAFERSIZES[props.selectedSize];\n\n\treturn (\n\t\t<div>\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(WAFERSIZES).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<div>Width: {sizeInfo.waferWidth} mm\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst PanelSizeSelect = (props: {\n\tselectedSize: keyof typeof PANELSIZES,\n\thandleSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => {\n\tconst sizeInfo = PANELSIZES[props.selectedSize];\n\n\treturn (\n\t\t<div>\n\t\t\t<select value={props.selectedSize} onChange={props.handleSizeChange}>\n\t\t\t\t{Object.entries(PANELSIZES).map(([key, value]) => (\n\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t{value.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<div>Width: {sizeInfo.waferWidth} mm, Height: {sizeInfo.waferHeight} mm\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst ModelSelector = (props: {\n\tselectedModel: keyof typeof YIELDMODELS,\n\thandleModelChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}) => (\n\t<div>\n\t\t<select value={props.selectedModel} onChange={props.handleModelChange}>\n\t\t\t{Object.entries(YIELDMODELS).map(([key, value]) => (\n\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t{value.name}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t\t{}\n\t\t<div>\n\t\t\tModel: {YIELDMODELS[props.selectedModel].name}\n\t\t</div>\n\t</div>\n);\n\nconst Calculations = (props: {\n\tcalcState: CalcState\n}) => (\n\t<div className=\"calculations\">\n\t\ttotalDies: {props.calcState.totalDies}, Good Wafers: {props.calcState.goodDies}, Fab\n\t\tYield: {props.calcState.fabYield}\n\t</div>\n);\n\nfunction isInsideCircle(x: number, y: number, centerX: number, centerY: number, radius: number) {\n\treturn Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2) <= radius;\n}\n\nfunction rectanglesInCircle(diameter: number, rectWidth: number, rectHeight: number) {\n\tconst radius = diameter / 2;\n\tconst centerX = radius;\n\tconst centerY = radius;\n\tlet positions = [];\n\n\tfor (let x = 0; x <= diameter + rectWidth; x += rectWidth) {\n\t\tfor (let y = 0; y <= diameter + rectHeight; y += rectHeight) {\n\t\t\tconst corners = [\n\t\t\t\t{ x: x, y: y },\n\t\t\t\t{ x: x + rectWidth, y: y },\n\t\t\t\t{ x: x, y: y + rectHeight },\n\t\t\t\t{ x: x + rectWidth, y: y + rectHeight }\n\t\t\t];\n\n\t\t\tif (corners.every(corner => isInsideCircle(corner.x, corner.y, centerX, centerY, radius))) {\n\t\t\t\tpositions.push({ x: x, y: y });\n\t\t\t}\n\t\t}\n\t}\n\treturn positions;\n}\n\n\nfunction getFabYield(defectRate: number, criticalArea: number, model: keyof typeof YIELDMODELS) {\n\tconst defects = criticalArea * defectRate / 100;\n\tswitch (model) {\n\t\tcase (\"poisson\"):\n\t\t\treturn Math.exp(-defects);\n\t\tcase (\"murph\"):\n\t\t\treturn Math.pow(((1 - Math.exp(-defects)) / defects), 2);\n\t\tcase (\"rect\"):\n\t\t\treturn (1 - Math.exp(-2 * defects)) / (2 * defects);\n\t\t//case ('moore'):\n\t\t//  return Math.exp(Math.sqrt(-defects));\n\t\tcase (\"seeds\"):\n\t\t\treturn 1 / (1 + defects);\n\t\tdefault:\n\t\t\tconsole.log(\"Invalid Model.\");\n\t\t\treturn 0;\n\t}\n}\n\nfunction evaulatePanelInputs(\n\tdieWidth: number,\n\tdieHeight: number,\n\tcriticalArea: number,\n\tdefectRate: number,\n\tedgeLoss: number,\n\tscribeHoriz: number,\n\tscribeVert: number,\n\tselectedSize: keyof typeof PANELSIZES,\n\tselectedModel: keyof typeof YIELDMODELS\n) {\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth, waferHeight } = PANELSIZES[selectedSize];\n\tconst adjustedDieWidth = dieWidth + scribeHoriz * 2;\n\tconst adjustedDieHeight = dieHeight + scribeVert * 2;\n\n\tconst diesPerRow = Math.floor(waferWidth / adjustedDieWidth);\n\tconst diesPerColumn = Math.floor(waferHeight / adjustedDieHeight);\n\n\tconst centerHorz = (waferWidth - adjustedDieWidth * diesPerRow) / 2;\n\tconst centerVert = (waferHeight - adjustedDieHeight * diesPerColumn) / 2;\n\n\tconst countWidth = Math.floor(waferWidth / (dieWidth + scribeHoriz * 2));\n\tconst countHeight = Math.floor(waferHeight / (dieHeight + scribeVert * 2));\n\n\tconst totalDies = countWidth * countHeight;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst row = Math.floor(i / diesPerRow);\n\t\tconst col = i % diesPerRow;\n\n\t\tconst dieState = dieStates[i];\n\n\t\tconst x = col * adjustedDieWidth + centerHorz;\n\t\tconst y = row * adjustedDieHeight + centerVert;\n\t\tconst width = dieWidth;\n\t\tconst height = dieHeight;\n\n\t\tdies[i] = { \"key\": i, \"dieState\": dieState, \"x\": x, \"y\": y, \"width\": width, \"height\": height };\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth,\n\t\twaferHeight\n\t};\n}\n\nfunction evaluateWaferInputs(\n\tdieWidth: number,\n\tdieHeight: number,\n\tcriticalArea: number,\n\tdefectRate: number,\n\tedgeLoss: number,\n\tscribeHoriz: number,\n\tscribeVert: number,\n\tselectedSize: keyof typeof WAFERSIZES,\n\tselectedModel: keyof typeof YIELDMODELS\n) {\n\tlet dies = [];\n\tconst fabYield = getFabYield(defectRate, criticalArea, selectedModel);\n\tconst { waferWidth } = WAFERSIZES[selectedSize];\n\n\tlet positions = rectanglesInCircle(waferWidth, dieWidth + scribeHoriz * 2, dieHeight + scribeVert * 2);\n\tlet totalDies = positions.length;\n\n\tconst goodDies = Math.floor(fabYield * totalDies);\n\n\tlet dieStates = new Array(totalDies).fill(\"defective\");\n\tfor (let i = 0; i < goodDies; i++) {\n\t\tdieStates[i] = \"good\";\n\t}\n\n\tfor (let i = dieStates.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[dieStates[i], dieStates[j]] = [dieStates[j], dieStates[i]];\n\t}\n\n\tfor (let i = 0; i < dieStates.length; i++) {\n\t\tconst x = positions[i].x;\n\t\tconst y = positions[i].y;\n\n\t\tconst dieState = dieStates[i];\n\t\tconst width = dieWidth;\n\t\tconst height = dieHeight;\n\n\t\tconst corners = [\n\t\t\t{ x: x, y: y },\n\t\t\t{ x: x + dieWidth, y: y },\n\t\t\t{ x: x, y: y + dieHeight },\n\t\t\t{ x: x + dieWidth, y: y + dieHeight }\n\t\t];\n\n\t\tlet lossCircleRadius = waferWidth - edgeLoss;\n\n\t\tif (!corners.every(corner => isInsideCircle(corner.x, corner.y, waferWidth / 2, waferWidth / 2, lossCircleRadius))) {\n\t\t\tdieStates[i] = \"partial\";\n\n\t\t}\n\n\t\tdies[i] = { \"key\": i, \"dieState\": dieState, \"x\": x, \"y\": y, \"width\": width, \"height\": height };\n\t}\n\n\treturn {\n\t\tdies,\n\t\ttotalDies,\n\t\tgoodDies,\n\t\tfabYield,\n\t\twaferWidth\n\t};\n}\n\nconst Wafer = (props: { calcState: CalcState }) => {\n\treturn (\n\t\t<svg width={props.calcState.waferWidth} height={props.calcState.waferWidth} style={{ border: \"1px solid black\" }}>\n\t\t\t<circle\n\t\t\t\tcx={props.calcState.waferWidth / 2}\n\t\t\t\tcy={props.calcState.waferWidth / 2}\n\t\t\t\tr={Math.min(props.calcState.waferWidth, props.calcState.waferWidth) / 2}\n\t\t\t\tstroke=\"black\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\tfill=\"none\" />\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\tprops.calcState.dies.map((die) => (<Die\n\t\t\t\t\t\tkey={die.key}\n\t\t\t\t\t\tcolor={STATECOLORS[die.dieState]}\n\t\t\t\t\t\tx={die.x}\n\t\t\t\t\t\ty={die.y}\n\t\t\t\t\t\twidth={die.width}\n\t\t\t\t\t\theight={die.height}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t</>\n\t\t</svg>\n\t);\n};\n\nconst Panel = (props: { calcState: CalcState }) => {\n\treturn (\n\t\t<svg width={props.calcState.waferWidth} height={props.calcState.waferHeight} style={{ border: \"1px solid black\" }}>\n\t\t\t{\n\t\t\t\tprops.calcState.dies.map((die) => (\n\t\t\t\t\t<Die\n\t\t\t\t\t\tkey={die.key}\n\t\t\t\t\t\tcolor={STATECOLORS[die.dieState]}\n\t\t\t\t\t\tx={die.x}\n\t\t\t\t\t\ty={die.y}\n\t\t\t\t\t\twidth={die.width}\n\t\t\t\t\t\theight={die.height}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t</svg>\n\t);\n};\n\n\nconst Die = (props: { color: string, x: number, y: number, width: number, height: number }) => (\n\t<rect x={props.x} y={props.y} width={props.width} height={props.height} fill={props.color} />\n);\n\nfunction App() {\n\tconst [calcState, setCalcState] = useState<CalcState>({\n\t\t\"dies\": [],\n\t\t\"totalDies\": 0,\n\t\t\"goodDies\": 0,\n\t\t\"fabYield\": 0,\n\t\t\"waferWidth\": 0,\n\t\t\"waferHeight\": 0\n\t});\n\tconst [dieWidth, setDieWidth] = useState(8);\n\tconst [dieHeight, setDieHeight] = useState(8);\n\tconst [aspectRatio, setAspectRatio] = useState(dieWidth / dieHeight);\n\tconst [maintainAspectRatio, setMaintainAspectRatio] = useState(true);\n\tconst [criticalArea, setCriticalArea] = useState(64);\n\tconst [defectRate, setDefectRate] = useState(0.1);\n\tconst [edgeLoss, setEdgeLoss] = useState(0);\n\tconst [allCritical, setAllCritical] = useState(true);\n\tconst [recticleLimit, setRecticleLimit] = useState(true);\n\tconst [scribeHoriz, setScribeHoriz] = useState(0.1);\n\tconst [scribeVert, setScribeVert] = useState(0.1);\n\tconst [transHoriz, setTransHoriz] = useState(0);\n\tconst [transVert, setTransVert] = useState(0.1);\n\tconst [shape, setShape] = useState<Shape>(\"Panel\");\n\tconst [panelSize, setPanelSize] = useState<keyof typeof PANELSIZES>(\"s300mm\");\n\tconst [waferSize, setWaferSize] = useState<keyof typeof WAFERSIZES>(\"s300mm\");\n\tconst [selectedModel, setSelectedModel] = useState<keyof typeof YIELDMODELS>(\"murph\");\n\n\tuseEffect(() => {\n\t\tif (maintainAspectRatio) {\n\t\t\tsetAspectRatio(dieWidth / dieHeight);\n\t\t}\n\t}, [dieWidth, dieHeight, maintainAspectRatio]);\n\n\tuseEffect(() => {\n\t\tif (shape === \"Wafer\") {\n\t\t\tsetCalcState(evaluateWaferInputs(dieWidth, dieHeight, criticalArea, defectRate, edgeLoss, scribeHoriz, scribeVert, waferSize, selectedModel));\n\t\t} else if (shape === \"Panel\") {\n\t\t\tsetCalcState(evaulatePanelInputs(dieWidth, dieHeight, criticalArea, defectRate, edgeLoss, scribeHoriz, scribeVert, panelSize, selectedModel));\n\t\t}\n\t}, [dieWidth, dieHeight, criticalArea, defectRate, edgeLoss, scribeHoriz, scribeVert, shape, panelSize, waferSize, selectedModel]);\n\n\tconst nullOrRound = (setter: (val: number) => void, value: number) => {\n\t\tconst roundedValue = Math.round(value * 100) / 100;\n\t\tsetter(roundedValue);\n\t};\n\n\tconst handleBlur = (setter: Dispatch<SetStateAction<number>>) => () => {\n\t\tsetter((prevValue) => (prevValue));\n\t};\n\n\tconst handleDimensionChange = (dimension: \"dieWidth\" | \"dieHeight\") => (value: number) => {\n\t\tif (!recticleLimit || ((dimension === \"dieWidth\" && value <= 33) || (dimension === \"dieHeight\" && value <= 26))) {\n\t\t\tif (maintainAspectRatio) {\n\t\t\t\tif (dimension === \"dieWidth\") {\n\t\t\t\t\tnullOrRound(setDieWidth, value);\n\t\t\t\t\tnullOrRound(setDieHeight, value / aspectRatio);\n\t\t\t\t} else if (dimension === \"dieHeight\") {\n\t\t\t\t\tnullOrRound(setDieHeight, value);\n\t\t\t\t\tnullOrRound(setDieWidth, value * aspectRatio);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdimension === \"dieWidth\" ? setDieWidth(value) : setDieHeight(value);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleScribeSizeChange = (dimension: string) => (value: number) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setScribeHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setScribeVert, value);\n\t\t}\n\t};\n\n\tconst handleCriticalAreaChange = (value: number) => {\n\t\tnullOrRound(setCriticalArea, value);\n\t};\n\n\tconst handleDefectRateChange = (value: number) => {\n\t\tconsole.log({ value });\n\t\tnullOrRound(setDefectRate, value);\n\t};\n\n\tconst handleEdgeLossChange = (value: number) => {\n\t\tnullOrRound(setEdgeLoss, value);\n\t};\n\n\tconst handleTransChange = (dimension: string) => (value: number) => {\n\t\tif (dimension === \"horiz\") {\n\t\t\tnullOrRound(setTransHoriz, value);\n\t\t} else if (dimension === \"vert\") {\n\t\t\tnullOrRound(setTransVert, value);\n\t\t}\n\t};\n\n\tconst handleMaintainAspectRatio = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetMaintainAspectRatio(event.target.checked);\n\t};\n\n\tconst handleAllCriticalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetCriticalArea(dieWidth * dieHeight);\n\t\tsetAllCritical(event.target.checked);\n\t};\n\n\tconst handleRecticleLimitChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetRecticleLimit(event.target.checked);\n\t};\n\n\tconst handleSizeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tif (shape === \"Panel\") {\n\t\t\tsetPanelSize(event.target.value as keyof typeof PANELSIZES);\n\t\t} else if (shape === \"Wafer\") {\n\t\t\tsetWaferSize(event.target.value as keyof typeof WAFERSIZES);\n\t\t}\n\t};\n\n\tconst handleModelChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tsetSelectedModel(event.target.value as keyof typeof YIELDMODELS);\n\t};\n\n\tconst numberInputs = [\n\t\t{\n\t\t\tlabel: \"Die Width (mm)\",\n\t\t\tvalue: dieWidth,\n\t\t\tonChange: handleDimensionChange(\"dieWidth\"),\n\t\t\tonBlur: handleBlur(setDieWidth),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Die Height (mm)\",\n\t\t\tvalue: dieHeight,\n\t\t\tonChange: handleDimensionChange(\"dieHeight\"),\n\t\t\tonBlur: handleBlur(setDieHeight),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Critical Area (mm²)\",\n\t\t\tvalue: criticalArea,\n\t\t\tonChange: handleCriticalAreaChange,\n\t\t\tonBlur: handleBlur(setCriticalArea),\n\t\t\tisDisabled: allCritical\n\t\t},\n\t\t{\n\t\t\tlabel: \"Defect Rate (#/cm²)\",\n\t\t\tvalue: defectRate,\n\t\t\tonChange: handleDefectRateChange,\n\t\t\tonBlur: handleBlur(setDefectRate),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Edge Loss (mm)\",\n\t\t\tvalue: edgeLoss,\n\t\t\tonChange: handleEdgeLossChange,\n\t\t\tonBlur: handleBlur(setEdgeLoss),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Scribe Lines Horiz\",\n\t\t\tvalue: scribeHoriz,\n\t\t\tonChange: handleScribeSizeChange(\"horiz\"),\n\t\t\tonBlur: handleBlur(setScribeHoriz),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Scribe Lines Vert\",\n\t\t\tvalue: scribeVert,\n\t\t\tonChange: handleScribeSizeChange(\"vert\"),\n\t\t\tonBlur: handleBlur(setScribeVert),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Translation Horiz\",\n\t\t\tvalue: transHoriz,\n\t\t\tonChange: handleTransChange(\"horiz\"),\n\t\t\tonBlur: handleBlur(setTransHoriz),\n\t\t\tisDisabled: false\n\t\t},\n\t\t{\n\t\t\tlabel: \"Translation Vert\",\n\t\t\tvalue: transVert,\n\t\t\tonChange: handleTransChange(\"vert\"),\n\t\t\tonBlur: handleBlur(setTransVert),\n\t\t\tisDisabled: false\n\t\t}\n\t];\n\n\tconst checkboxes = [\n\t\t{ label: \"Maintain Aspect Ratio\", onChange: handleMaintainAspectRatio, checked: maintainAspectRatio },\n\t\t{ label: \"Recticle Limit\", onChange: handleRecticleLimitChange, checked: recticleLimit },\n\t\t{ label: \"All Critical\", onChange: handleAllCriticalChange, checked: allCritical },\n\t\t{\n\t\t\tlabel: \"Centering\", onChange: () => {\n\t\t\t}, checked: false\n\t\t}\n\t];\n\n\treturn (\n\t\t<div className=\"calc\">\n\t\t\t<div className=\"control-panel\">\n\t\t\t\t{numberInputs.map(input => (\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tkey={input.label}\n\t\t\t\t\t\tlabel={input.label}\n\t\t\t\t\t\tvalue={input.value}\n\t\t\t\t\t\tisDisabled={input.isDisabled}\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\tinput.onChange(parseFloat(event.target.value));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{checkboxes.map(input => (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tkey={input.label}\n\t\t\t\t\t\tlabel={input.label}\n\t\t\t\t\t\tonChange={input.onChange}\n\t\t\t\t\t\tchecked={input.checked}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t<ShapeSelector\n\t\t\t\t\tshape={shape}\n\t\t\t\t\tsetShape={setShape}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\tshape === \"Panel\" &&\n\t\t\t\t\t<PanelSizeSelect\n\t\t\t\t\t\tselectedSize={panelSize}\n\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tshape === \"Wafer\" &&\n\t\t\t\t\t<WaferSizeSelect\n\t\t\t\t\t\tselectedSize={waferSize}\n\t\t\t\t\t\thandleSizeChange={handleSizeChange}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<ModelSelector\n\t\t\t\t\tselectedModel={selectedModel}\n\t\t\t\t\thandleModelChange={handleModelChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"calculations\">\n\t\t\t\t<Calculations\n\t\t\t\t\tcalcState={calcState} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{shape === \"Panel\" ? (\n\t\t\t\t\t<Panel calcState={calcState} />\n\t\t\t\t) : shape === \"Wafer\" ? (\n\t\t\t\t\t<Wafer calcState={calcState} />\n\t\t\t\t) : null}\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst domNode = document.getElementById('die-yield-calculator');\n\tReactDOM.render(<App />, domNode);\n});\n"],"names":["React","useState","useEffect","PANELSIZES","s300mm","name","waferHeight","waferWidth","s305mm","s457mmsq","s457x600mm","s510mm","s600m","WAFERSIZES","s51mm","s76mm","s100mm","s125mm","s150mm","s200mm","s450mm","STATECOLORS","good","defective","partial","lost","YIELDMODELS","poisson","murph","rect","seeds","NumberInput","props","createElement","className","label","type","disabled","isDisabled","value","onChange","onBlur","step","Checkbox","checked","ShapeSelector","shape","e","setShape","target","WaferSizeSelect","sizeInfo","selectedSize","handleSizeChange","Object","entries","map","key","PanelSizeSelect","ModelSelector","selectedModel","handleModelChange","Calculations","calcState","totalDies","goodDies","fabYield","isInsideCircle","x","y","centerX","centerY","radius","Math","sqrt","rectanglesInCircle","diameter","rectWidth","rectHeight","positions","corners","every","corner","push","getFabYield","defectRate","criticalArea","model","defects","exp","pow","console","log","evaulatePanelInputs","dieWidth","dieHeight","edgeLoss","scribeHoriz","scribeVert","dies","adjustedDieWidth","adjustedDieHeight","diesPerRow","floor","diesPerColumn","centerHorz","centerVert","countWidth","countHeight","dieStates","Array","fill","i","length","j","random","row","col","dieState","width","height","evaluateWaferInputs","lossCircleRadius","Wafer","style","border","cx","cy","r","min","stroke","strokeWidth","Fragment","die","Die","color","Panel","App","setCalcState","setDieWidth","setDieHeight","aspectRatio","setAspectRatio","maintainAspectRatio","setMaintainAspectRatio","setCriticalArea","setDefectRate","setEdgeLoss","allCritical","setAllCritical","recticleLimit","setRecticleLimit","setScribeHoriz","setScribeVert","transHoriz","setTransHoriz","transVert","setTransVert","panelSize","setPanelSize","waferSize","setWaferSize","setSelectedModel","nullOrRound","setter","roundedValue","round","handleBlur","prevValue","handleDimensionChange","dimension","handleScribeSizeChange","handleCriticalAreaChange","handleDefectRateChange","handleEdgeLossChange","handleTransChange","handleMaintainAspectRatio","event","handleAllCriticalChange","handleRecticleLimitChange","numberInputs","checkboxes","input","parseFloat","ReactDOM","jsx","_jsx","document","addEventListener","domNode","getElementById","render"],"sourceRoot":""}